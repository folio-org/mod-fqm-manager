<databaseChangeLog xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                   xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
                   xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog
                   http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.4.xsd">
  <changeSet id="add-filter-value-getters-for-item-details" author="mweaver@ebsco.com" runOnChange="true">
    <preConditions onFail="CONTINUE">
      <viewExists viewName="src_inventory_item"/>
      <viewExists viewName="src_inventory_holdings_record"/>
      <viewExists viewName="src_inventory_instance"/>
      <viewExists viewName="src_inventory_material_type"/>
      <viewExists viewName="src_inventory_location"/>
      <viewExists viewName="src_inventory_service_point"/>
      <viewExists viewName="src_inventory_loclibrary"/>
      <viewExists viewName="src_inventory_call_number_type"/>
      <viewExists viewName="src_users_groups"/>
      <viewExists viewName="src_users_users"/>
      <sqlCheck expectedResult="1">
        SELECT COUNT(*) FROM pg_matviews WHERE schemaname = '${tenant_id}_mod_fqm_manager'AND matviewname = 'drv_inventory_item_status';
      </sqlCheck>
    </preConditions>
    <comment>Add filterValueGetters, valueFunctions, and valueSourceApis to various columns</comment>
    <update tableName="entity_type_definition">
      <column name="definition">
        {
          "id": "0cb79a4c-f7eb-4941-a104-745224ae0292",
          "name": "drv_item_details",
          "private": false,
          "fromClause": "src_inventory_item LEFT JOIN src_inventory_location effective_location_ref_data ON effective_location_ref_data.id = src_inventory_item.effectivelocationid LEFT JOIN src_inventory_call_number_type call_number_type_ref_data ON call_number_type_ref_data.id::text = ((src_inventory_item.jsonb -> 'effectiveCallNumberComponents'::text) ->> 'typeId'::text) LEFT JOIN src_inventory_call_number_type call_item_number_type_ref_data ON call_item_number_type_ref_data.id::text = (src_inventory_item.jsonb ->> 'itemLevelCallNumberTypeId'::text) LEFT JOIN src_inventory_loclibrary loclib_ref_data ON loclib_ref_data.id = effective_location_ref_data.libraryid LEFT JOIN src_inventory_location permanent_location_ref_data ON permanent_location_ref_data.id = src_inventory_item.permanentlocationid LEFT JOIN src_inventory_material_type material_type_ref_data ON material_type_ref_data.id = src_inventory_item.materialtypeid LEFT JOIN src_inventory_location temporary_location_ref_data ON temporary_location_ref_data.id = src_inventory_item.temporarylocationid JOIN src_inventory_holdings_record hrim ON src_inventory_item.holdingsrecordid = hrim.id JOIN src_inventory_instance instance_details ON hrim.instanceid = instance_details.id",
          "columns": [
            {
              "name": "holdings_id",
              "dataType": {
                "dataType": "rangedUUIDType"
              },
              "queryable": true,
              "valueGetter": "src_inventory_item.holdingsrecordid",
              "visibleByDefault": false
            },
            {
              "name": "instance_created_date",
              "dataType": {
                "dataType": "dateType"
              },
              "queryable": true,
              "valueGetter": "instance_details.jsonb -> 'metadata' ->> 'createdDate'",
              "visibleByDefault": false
            },
            {
              "name": "instance_id",
              "dataType": {
                "dataType": "rangedUUIDType"
              },
              "queryable": true,
              "valueGetter": "hrim.instanceid",
              "visibleByDefault": false
            },
            {
              "name": "instance_primary_contributor",
              "dataType": {
                "dataType": "stringType"
              },
              "queryable": true,
              "valueGetter": "jsonb_path_query_first(instance_details.jsonb, '$.\"contributors\"[*]?(@.\"primary\" == true).\"name\"'::jsonpath) #>> '{}'::text[]",
              "visibleByDefault": false
            },
            {
              "name": "instance_title",
              "dataType": {
                "dataType": "stringType"
              },
              "queryable": true,
              "filterValueGetter": "\"left\"(lower(${tenant_id}_mod_inventory_storage.f_unaccent(instance_details.jsonb ->> 'title'::text)), 600)",
              "valueFunction": "\"left\"(lower(${tenant_id}_mod_inventory_storage.f_unaccent(:value)), 600)",
              "valueGetter": "instance_details.jsonb ->> 'title'",
              "visibleByDefault": true
            },
            {
              "name": "instance_updated_date",
              "dataType": {
                "dataType": "dateType"
              },
              "queryable": true,
              "filterValueGetter": "\"left\"(lower((instance_details.jsonb -> 'metadata'::text) ->> 'updatedDate'::text), 600)",
              "valueFunction": "\"left\"(lower(:value), 600)",
              "valueGetter": "instance_details.jsonb -> 'metadata' ->> 'updatedDate'",
              "visibleByDefault": false
            },
            {
              "name": "item_barcode",
              "dataType": {
                "dataType": "stringType"
              },
              "queryable": true,
              "filterValueGetter": "lower(src_inventory_item.jsonb ->> 'barcode'::text)",
              "valueFunction": "lower(:value)",
              "valueGetter": "src_inventory_item.jsonb ->> 'barcode'",
              "visibleByDefault": true
            },
            {
              "name": "item_level_call_number",
              "dataType": {
                "dataType": "stringType"
              },
              "queryable": true,
              "valueGetter": "src_inventory_item.jsonb ->> 'itemLevelCallNumber'",
              "visibleByDefault": false
            },
            {
              "name": "item_level_call_number_type_name",
              "source": {
                "columnName": "call_number_type_name",
                "entityTypeId": "5c8315be-13f5-4df5-ae8b-086bae83484d"
              },
              "dataType": {
                "dataType": "stringType"
              },
              "queryable": true,
              "idColumnName": "item_level_call_number_typeid",
              "filterValueGetter": "lower(${tenant_id}_mod_inventory_storage.f_unaccent(call_item_number_type_ref_data.jsonb ->> 'name'::text))",
              "valueFunction": "lower(${tenant_id}_mod_inventory_storage.f_unaccent(:value))",
              "valueGetter": "call_item_number_type_ref_data.jsonb ->> 'name'",
              "visibleByDefault": false
            },
            {
              "name": "item_level_call_number_typeid",
              "dataType": {
                "dataType": "rangedUUIDType"
              },
              "queryable": true,
              "valueGetter": "src_inventory_item.jsonb ->> 'itemLevelCallNumberTypeId'",
              "visibleByDefault": false
            },
            {
              "name": "item_copy_number",
              "dataType": {
                "dataType": "stringType"
              },
              "queryable": true,
              "valueGetter": "src_inventory_item.jsonb ->> 'copyNumber'",
              "visibleByDefault": true
            },
            {
              "name": "item_created_date",
              "dataType": {
                "dataType": "dateType"
              },
              "queryable": true,
              "valueGetter": "src_inventory_item.jsonb -> 'metadata' ->> 'createdDate'",
              "visibleByDefault": false
            },
            {
              "name": "item_effective_call_number",
              "dataType": {
                "dataType": "stringType"
              },
              "queryable": true,
              "valueGetter": "concat_ws(', '::text, NULLIF((src_inventory_item.jsonb -> 'effectiveCallNumberComponents'::text) ->> 'prefix'::text, ''::text), NULLIF((src_inventory_item.jsonb -> 'effectiveCallNumberComponents'::text) ->> 'callNumber'::text, ''::text), NULLIF((src_inventory_item.jsonb -> 'effectiveCallNumberComponents'::text) ->> 'suffix'::text, ''::text), NULLIF(src_inventory_item.jsonb ->> 'copyNumber'::text, ''::text))",
              "visibleByDefault": true
            },
            {
              "name": "item_effective_call_number_type_name",
              "source": {
                "columnName": "call_number_type_name",
                "entityTypeId": "5c8315be-13f5-4df5-ae8b-086bae83484d"
              },
              "dataType": {
                "dataType": "stringType"
              },
              "queryable": true,
              "idColumnName": "item_effective_call_number_typeid",
              "filterValueGetter": "lower(${tenant_id}_mod_inventory_storage.f_unaccent(call_number_type_ref_data.jsonb ->> 'name'::text))",
              "valueFunction": "lower(${tenant_id}_mod_inventory_storage.f_unaccent(:value))",
              "valueGetter": "call_number_type_ref_data.jsonb ->> 'name'",
              "visibleByDefault": false
            },
            {
              "name": "item_effective_call_number_typeid",
              "dataType": {
                "dataType": "rangedUUIDType"
              },
              "queryable": true,
              "valueGetter": "src_inventory_item.jsonb -> 'effectiveCallNumberComponents' ->> 'typeId'",
              "visibleByDefault": false
            },
            {
              "name": "item_effective_library_code",
              "dataType": {
                "dataType": "stringType"
              },
              "queryable": true,
              "valueGetter": "loclib_ref_data.jsonb ->> 'code'",
              "visibleByDefault": false
            },
            {
              "name": "item_effective_library_id",
              "dataType": {
                "dataType": "rangedUUIDType"
              },
              "queryable": true,
              "valueGetter": "loclib_ref_data.id",
              "visibleByDefault": false
            },
            {
              "name": "item_effective_library_name",
              "source": {
                "columnName": "loclibrary_name",
                "entityTypeId": "cf9f5c11-e943-483c-913b-81d1e338accc"
              },
              "dataType": {
                "dataType": "stringType"
              },
              "queryable": true,
              "idColumnName": "item_effective_library_id",
              "valueGetter": "loclib_ref_data.jsonb ->> 'name'",
              "visibleByDefault": false
            },
            {
              "name": "item_effective_location_id",
              "dataType": {
                "dataType": "rangedUUIDType"
              },
              "queryable": true,
              "valueGetter": "src_inventory_item.effectivelocationid",
              "visibleByDefault": false
            },
            {
              "name": "item_effective_location_name",
              "source": {
                "columnName": "location_name",
                "entityTypeId": "a9d6305e-fdb4-4fc4-8a73-4a5f76d8410b"
              },
              "dataType": {
                "dataType": "stringType"
              },
              "queryable": true,
              "idColumnName": "item_effective_location_id",
              "filterValueGetter": " lower(${tenant_id}_mod_inventory_storage.f_unaccent(effective_location_ref_data.jsonb ->> 'name'::text))",
              "valueFunction": " lower(${tenant_id}_mod_inventory_storage.f_unaccent(:value))",
              "valueGetter": "effective_location_ref_data.jsonb ->> 'name'",
              "visibleByDefault": true
            },
            {
              "name": "item_hrid",
              "dataType": {
                "dataType": "stringType"
              },
              "queryable": true,
              "filterValueGetter": "lower(${tenant_id}_mod_inventory_storage.f_unaccent(src_inventory_item.jsonb ->> 'hrid'::text))",
              "valueFunction": "lower(${tenant_id}_mod_inventory_storage.f_unaccent(:value))",
              "valueGetter": "src_inventory_item.jsonb ->> 'hrid'",
              "visibleByDefault": false
            },
            {
              "name": "id",
              "dataType": {
                "dataType": "rangedUUIDType"
              },
              "queryable": true,
              "valueGetter": "src_inventory_item.id",
              "isIdColumn": true,
              "visibleByDefault": false
            },
            {
              "name": "item_material_type",
              "dataType": {
                "dataType": "stringType"
              },
              "idColumnName": "item_material_type_id",
              "valueSourceApi": {
                "path": "material-types",
                "valueJsonPath": "$.mtypes.*.id",
                "labelJsonPath": "$.mtypes.*.name"
              },
              "source": {
                "columnName": "item_material_type",
                "entityTypeId": "0cb79a4c-f7eb-4941-a104-745224ae0292"
              },
              "queryable": true,
              "filterValueGetter": "lower(${tenant_id}_mod_inventory_storage.f_unaccent(material_type_ref_data.jsonb ->> 'name'::text))",
              "valueFunction": "lower(${tenant_id}_mod_inventory_storage.f_unaccent(:value))",
              "valueGetter": "material_type_ref_data.jsonb ->> 'name'",
              "visibleByDefault": false
            },
            {
              "name": "item_material_type_id",
              "dataType": {
                "dataType": "rangedUUIDType"
              },
              "queryable": true,
              "valueGetter": "src_inventory_item.materialtypeid",
              "visibleByDefault": false
            },
            {
              "name": "item_permanent_location_id",
              "dataType": {
                "dataType": "rangedUUIDType"
              },
              "queryable": true,
              "valueGetter": "src_inventory_item.permanentlocationid",
              "visibleByDefault": false
            },
            {
              "name": "item_permanent_location_name",
              "source": {
                "columnName": "location_name",
                "entityTypeId": "a9d6305e-fdb4-4fc4-8a73-4a5f76d8410b"
              },
              "dataType": {
                "dataType": "stringType"
              },
              "queryable": true,
              "idColumnName": "item_permanent_location_id",
              "filterValueGetter": "lower(${tenant_id}_mod_inventory_storage.f_unaccent(permanent_location_ref_data.jsonb ->> 'name'::text))",
              "valueFunction": "lower(${tenant_id}_mod_inventory_storage.f_unaccent(:value))",
              "valueGetter": "permanent_location_ref_data.jsonb ->> 'name'",
              "visibleByDefault": false
            },
            {
              "name": "item_statistical_code_ids",
              "dataType":{
                "dataType":"arrayType",
                "itemDataType": {
                  "dataType": "rangedUUIDType"
                }
              },
              "valueGetter": "( SELECT array_agg(record.value::text) FILTER (WHERE (record.value::text) IS NOT NULL) AS array_agg FROM jsonb_array_elements_text(src_inventory_item.jsonb -> 'statisticalCodeIds'::text) record(value))",
              "filterValueGetter": "( SELECT array_agg(lower(record.value::text)) FILTER (WHERE (record.value::text) IS NOT NULL) AS array_agg FROM jsonb_array_elements_text(src_inventory_item.jsonb -> 'statisticalCodeIds'::text) record(value))",
              "valueFunction": "lower(:value)",
              "visibleByDefault": false
            },
            {
              "name": "item_statistical_codes",
              "dataType":{
                "dataType":"arrayType",
                "itemDataType": {
                  "dataType": "stringType"
                }
              },
              "idColumnName": "item_statistical_code_ids",
              "source": {
                "entityTypeId": "d2da8cc7-9171-4d3e-8aba-4da286eb5f1c",
                "columnName": "statistical_code"
              },
              "valueGetter": "( SELECT array_agg(statcode.statistical_code) FILTER (WHERE (statcode.statistical_code) IS NOT NULL) AS array_agg FROM jsonb_array_elements_text((src_inventory_item.jsonb -> 'statisticalCodeIds'::text)) record(value) JOIN drv_inventory_statistical_code_full statcode ON (record.value::text) = statcode.id::text)",
              "filterValueGetter": "( SELECT array_agg(lower(statcode.statistical_code)) FILTER (WHERE (statcode.statistical_code) IS NOT NULL) AS array_agg FROM jsonb_array_elements_text((src_inventory_item.jsonb -> 'statisticalCodeIds'::text)) record(value) JOIN drv_inventory_statistical_code_full statcode ON (record.value::text) = statcode.id::text)",
              "valueFunction": "lower(:value)",
              "visibleByDefault": true
            },
            {
              "name": "item_status",
              "values": [
                {
                  "label": "Aged to lost",
                  "value": "Aged to lost"
                },
                {
                  "label": "Available",
                  "value": "Available"
                },
                {
                  "label": "Awaiting pickup",
                  "value": "Awaiting pickup"
                },
                {
                  "label": "Awaiting delivery",
                  "value": "Awaiting delivery"
                },
                {
                  "label": "Checked out",
                  "value": "Checked out"
                },
                {
                  "label": "Claimed returned",
                  "value": "Claimed returned"
                },
                {
                  "label": "Declared lost",
                  "value": "Declared lost"
                },
                {
                  "label": "In process",
                  "value": "In process"
                },
                {
                  "label": "In process (non-requestable)",
                  "value": "In process (non-requestable)"
                },
                {
                  "label": "In transit",
                  "value": "In transit"
                },
                {
                  "label": "Intellectual item",
                  "value": "Intellectual item"
                },
                {
                  "label": "Long missing",
                  "value": "Long missing"
                },
                {
                  "label": "Lost and paid",
                  "value": "Lost and paid"
                },
                {
                  "label": "Missing",
                  "value": "Missing"
                },
                {
                  "label": "On order",
                  "value": "On order"
                },
                {
                  "label": "Paged",
                  "value": "Paged"
                },
                {
                  "label": "Restricted",
                  "value": "Restricted"
                },
                {
                  "label": "Order closed",
                  "value": "Order closed"
                },
                {
                  "label": "Unavailable",
                  "value": "Unavailable"
                },
                {
                  "label": "Unknown",
                  "value": "Unknown"
                },
                {
                  "label": "Withdrawn",
                  "value": "Withdrawn"
                }
              ],
              "dataType": {
                "dataType": "stringType"
              },
              "queryable": true,
              "filterValueGetter": "\"left\"(lower(${tenant_id}_mod_inventory_storage.f_unaccent((src_inventory_item.jsonb -> 'status'::text) ->> 'name'::text)), 600)",
              "valueFunction": "\"left\"(lower(${tenant_id}_mod_inventory_storage.f_unaccent(:value)), 600)",
              "valueGetter": "src_inventory_item.jsonb -> 'status' ->> 'name'",
              "visibleByDefault": false
            },
            {
              "name": "item_temporary_location_id",
              "dataType": {
                "dataType": "rangedUUIDType"
              },
              "queryable": true,
              "valueGetter": "src_inventory_item.temporarylocationid",
              "visibleByDefault": false
            },
            {
              "name": "item_temporary_location_name",
              "source": {
                "columnName": "location_name",
                "entityTypeId": "a9d6305e-fdb4-4fc4-8a73-4a5f76d8410b"
              },
              "dataType": {
                "dataType": "stringType"
              },
              "queryable": true,
              "idColumnName": "item_temporary_location_id",
              "filterValueGetter": "lower(${tenant_id}_mod_inventory_storage.f_unaccent(temporary_location_ref_data.jsonb ->> 'name'::text))",
              "valueFunction": "lower(${tenant_id}_mod_inventory_storage.f_unaccent(:value))",
              "valueGetter": "temporary_location_ref_data.jsonb ->> 'name'",
              "visibleByDefault": false
            },
            {
              "name": "item_updated_date",
              "dataType": {
                "dataType": "dateType"
              },
              "queryable": true,
              "valueGetter": "src_inventory_item.jsonb -> 'metadata' ->> 'updatedDate'",
              "visibleByDefault": false
            }
          ],
          "defaultSort": [
            {
              "direction": "ASC",
              "columnName": "item_effective_location_name"
            },
            {
              "direction": "ASC",
              "columnName": "instance_title"
            },
            {
              "direction": "ASC",
              "columnName": "instance_primary_contributor"
            },
            {
              "direction": "ASC",
              "columnName": "id"
            }
          ]
        }
      </column>
      <where>id = '0cb79a4c-f7eb-4941-a104-745224ae0292'</where>
    </update>
  </changeSet>
</databaseChangeLog>
