<databaseChangeLog xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                   xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
                   xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog
                   http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.4.xsd">
  <changeSet id="add-filter-value-getters-for-loan-details" author="mweaver@ebsco.com" runOnChange="true">
    <preConditions onFail="CONTINUE">
      <viewExists viewName="src_inventory_item"/>
      <viewExists viewName="src_inventory_holdings_record"/>
      <viewExists viewName="src_inventory_instance"/>
      <viewExists viewName="src_inventory_material_type"/>
      <viewExists viewName="src_inventory_location"/>
      <viewExists viewName="src_inventory_service_point"/>
      <viewExists viewName="src_inventory_loclibrary"/>
      <viewExists viewName="src_inventory_call_number_type"/>
      <viewExists viewName="src_circulation_loan"/>
      <viewExists viewName="src_circulation_loan_policy"/>
      <viewExists viewName="src_users_groups"/>
      <viewExists viewName="src_users_users"/>
      <sqlCheck expectedResult="2">
        SELECT COUNT(*) FROM pg_matviews WHERE schemaname = '${tenant_id}_mod_fqm_manager'AND matviewname IN ('drv_circulation_loan_status', 'drv_inventory_item_status');
      </sqlCheck>
    </preConditions>

    <comment>Add filterValueGetters and valueFunctions to various columns</comment>
    <update tableName="entity_type_definition">
      <column name="definition">
        {
          "id": "4e09d89a-44ed-418e-a9cc-820dfb27bf3a",
          "name": "drv_loan_details",
          "private": false,
          "fromClause": "src_circulation_loan LEFT JOIN src_circulation_loan_policy loan_policy_ref_data ON loan_policy_ref_data.id = ((src_circulation_loan.jsonb ->> 'loanPolicyId'::text)::uuid) LEFT JOIN src_inventory_service_point cospi ON cospi.id = \"left\"(lower(src_circulation_loan.jsonb ->> 'checkoutServicePointId'::text), 600)::uuid LEFT JOIN src_inventory_service_point cispi ON cispi.id = \"left\"(lower(src_circulation_loan.jsonb ->> 'checkinServicePointId'::text), 600)::uuid JOIN src_inventory_item item_details ON item_details.id = \"left\"(lower(f_unaccent(src_circulation_loan.jsonb ->> 'itemId'::text)), 600)::uuid LEFT JOIN src_inventory_material_type material_type_ref_data ON material_type_ref_data.id = item_details.materialtypeid JOIN src_users_users user_details ON user_details.id = \"left\"(lower(f_unaccent(src_circulation_loan.jsonb ->> 'userId'::text)), 600)::uuid LEFT JOIN src_users_groups patron_id_ref_data ON patron_id_ref_data.id = user_details.patrongroup JOIN src_inventory_holdings_record hrim ON item_details.holdingsrecordid = hrim.id JOIN src_inventory_instance instance_details ON hrim.instanceid = instance_details.id",
          "columns": [
            {
              "name": "holdings_id",
              "dataType": {
                "dataType": "rangedUUIDType"
              },
              "queryable": true,
              "valueGetter": "item_details.holdingsrecordid",
              "visibleByDefault": false
            },
            {
              "name": "instance_id",
              "dataType": {
                "dataType": "rangedUUIDType"
              },
              "queryable": true,
              "valueGetter": "hrim.instanceid",
              "visibleByDefault": false
            },
            {
              "name": "instance_primary_contributor",
              "dataType": {
                "dataType": "stringType"
              },
              "queryable": true,
              "valueGetter": "jsonb_path_query_first(instance_details.jsonb, '$.\"contributors\"[*]?(@.\"primary\" == true).\"name\"'::jsonpath) #>> '{}'::text[]",
              "visibleByDefault": false
            },
            {
              "name": "instance_title",
              "dataType": {
                "dataType": "stringType"
              },
              "queryable": true,
              "filterValueGetter": "\"left\"(lower(${tenant_id}_mod_inventory_storage.f_unaccent(instance_details.jsonb ->> 'title'::text)), 600)",
              "valueFunction": "\"left\"(lower(${tenant_id}_mod_inventory_storage.f_unaccent(:value)), 600)",
              "valueGetter": "instance_details.jsonb ->> 'title'",
              "visibleByDefault": true
            },
            {
              "name": "item_barcode",
              "dataType": {
                "dataType": "stringType"
              },
              "queryable": true,
              "filterValueGetter": "lower(item_details.jsonb ->> 'barcode'::text)",
              "valueFunction": "lower(:value)",
              "valueGetter": "item_details.jsonb ->> 'barcode'",
              "visibleByDefault": false
            },
            {
              "name": "item_call_number",
              "dataType": {
                "dataType": "stringType"
              },
              "queryable": true,
              "filterValueGetter": "\"left\"(lower((item_details.jsonb -> 'effectiveCallNumberComponents'::text) ->> 'callNumber'::text), 600)",
              "valueFunction": "\"left\"(lower(:value), 600)",
              "valueGetter": "item_details.jsonb -> 'effectiveCallNumberComponents' ->> 'callNumber'",
              "visibleByDefault": false
            },
            {
              "name": "item_id",
              "dataType": {
                "dataType": "rangedUUIDType"
              },
              "queryable": true,
              "valueGetter": "item_details.id",
              "visibleByDefault": false
            },
            {
              "name": "item_material_type",
              "dataType": {
                "dataType": "stringType"
              },
              "queryable": true,
              "idColumnName": "item_material_type_id",
              "valueSourceApi": {
                "path": "material-types",
                "valueJsonPath": "$.mtypes.*.id",
                "labelJsonPath": "$.mtypes.*.name"
              },
              "source": {
                "columnName": "item_material_type",
                "entityTypeId": "4e09d89a-44ed-418e-a9cc-820dfb27bf3a"
              },
              "filterValueGetter": "lower(${tenant_id}_mod_inventory_storage.f_unaccent(material_type_ref_data.jsonb ->> 'name'::text))",
              "valueFunction": "lower(${tenant_id}_mod_inventory_storage.f_unaccent(:value))",
              "valueGetter": "material_type_ref_data.jsonb ->> 'name'",
              "visibleByDefault": false
            },
            {
              "name": "item_material_type_id",
              "dataType": {
                "dataType": "rangedUUIDType"
              },
              "queryable": true,
              "valueGetter": "item_details.materialtypeid",
              "visibleByDefault": false
            },
            {
              "name": "item_status",
              "source": {
                "columnName": "item_status",
                "entityTypeId": "a1a37288-1afe-4fa5-ab59-a5bcf5d8ca2d"
              },
              "dataType": {
                "dataType": "stringType"
              },
              "queryable": true,
              "filterValueGetter": "\"left\"(lower(${tenant_id}_mod_inventory_storage.f_unaccent((item_details.jsonb -> 'status'::text) ->> 'name'::text)), 600)",
              "valueFunction": "\"left\"(lower(${tenant_id}_mod_inventory_storage.f_unaccent(:value)), 600)",
              "valueGetter": "item_details.jsonb -> 'status' ->> 'name'",
              "visibleByDefault": true
            },
            {
              "name": "loan_checkin_servicepoint_id",
              "dataType": {
                "dataType": "rangedUUIDType"
              },
              "queryable": true,
              "valueGetter": "cispi.id",
              "visibleByDefault": false
            },
            {
              "name": "loan_checkin_servicepoint_name",
              "source": {
                "columnName": "loan_checkin_servicepoint_name",
                "entityTypeId": "4e09d89a-44ed-418e-a9cc-820dfb27bf3a"
              },
              "valueSourceApi": {
                "path": "service-points",
                "valueJsonPath": "$.servicepoints.*.id",
                "labelJsonPath": "$.servicepoints.*.name"
              },
              "dataType": {
                "dataType": "stringType"
              },
              "queryable": true,
              "idColumnName": "loan_checkin_servicepoint_id",
              "filterValueGetter": "lower(${tenant_id}_mod_inventory_storage.f_unaccent(cispi.jsonb ->> 'name'::text))",
              "valueFunction": "lower(${tenant_id}_mod_inventory_storage.f_unaccent(:value))",
              "valueGetter": "cispi.jsonb ->> 'name'",
              "visibleByDefault": false
            },
            {
              "name": "loan_checkout_date",
              "dataType": {
                "dataType": "dateType"
              },
              "queryable": true,
              "filterValueGetter": "\"left\"(lower(src_circulation_loan.jsonb ->> 'loanDate'::text), 600)",
              "valueFunction": "\"left\"(lower(:value), 600)",
              "valueGetter": "src_circulation_loan.jsonb ->> 'loanDate'",
              "visibleByDefault": false
            },
            {
              "name": "loan_checkout_servicepoint_id",
              "dataType": {
                "dataType": "rangedUUIDType"
              },
              "queryable": true,
              "valueGetter": "cospi.id",
              "visibleByDefault": false
            },
            {
              "name":"loan_checkout_servicepoint_name",
              "source": {
                "columnName": "loan_checkout_servicepoint_name",
                "entityTypeId": "4e09d89a-44ed-418e-a9cc-820dfb27bf3a"
              },
              "dataType": {
                "dataType": "stringType"
              },
              "valueSourceApi": {
                "path": "service-points",
                "valueJsonPath": "$.servicepoints.*.id",
                "labelJsonPath": "$.servicepoints.*.name"
              },
              "queryable": true,
              "idColumnName": "loan_checkout_servicepoint_id",
              "filterValueGetter": "lower(${tenant_id}_mod_inventory_storage.f_unaccent(cospi.jsonb ->> 'name'::text))",
              "valueFunction": "lower(${tenant_id}_mod_inventory_storage.f_unaccent(:value))",
              "valueGetter": "cospi.jsonb ->> 'name'",
              "visibleByDefault": false
            },
            {
              "name": "loan_due_date",
              "dataType": {
                "dataType": "dateType"
              },
              "queryable": true,
              "filterValueGetter": "\"left\"(lower(src_circulation_loan.jsonb ->> 'dueDate'::text), 600)",
              "valueFunction": "\"left\"(lower(:value), 600)",
              "valueGetter": "src_circulation_loan.jsonb ->> 'dueDate'",
              "visibleByDefault": true
            },
            {
              "name": "id",
              "dataType": {
                "dataType": "rangedUUIDType"
              },
              "queryable": true,
              "valueGetter": "src_circulation_loan.id",
              "isIdColumn": true,
              "visibleByDefault": false
            },
            {
              "name": "loan_policy_id",
              "dataType": {
                "dataType": "rangedUUIDType"
              },
              "queryable": true,
              "valueGetter": "loan_policy_ref_data.id",
              "visibleByDefault": false
            },
            {
              "name": "loan_policy_name",
              "source": {
                "columnName": "loan_policy_name",
                "entityTypeId": "4e09d89a-44ed-418e-a9cc-820dfb27bf3a"
              },
              "valueSourceApi": {
                "path": "loan-policy-storage/loan-policies",
                "valueJsonPath": "$.loanPolicies.*.id",
                "labelJsonPath": "$.loanPolicies.*.name"
              },
              "dataType": {
                "dataType": "stringType"
              },
              "queryable": true,
              "idColumnName": "loan_policy_id",
              "valueGetter": "loan_policy_ref_data.jsonb ->> 'name'",
              "visibleByDefault": false
            },
            {
              "name": "loan_return_date",
              "dataType": {
                "dataType": "dateType"
              },
              "queryable": true,
              "valueGetter": "src_circulation_loan.jsonb ->> 'returnDate'",
              "visibleByDefault": false
            },
            {
              "name": "loan_status",
              "source": {
                "columnName": "loan_status",
                "entityTypeId": "146dfba5-cdc9-45f5-a8a1-3fdc454c9ae2"
              },
              "dataType": {
                "dataType": "stringType"
              },
              "queryable": true,
              "filterValueGetter": "\"left\"(lower(${tenant_id}_mod_circulation_storage.f_unaccent((src_circulation_loan.jsonb -> 'status'::text) ->> 'name'::text)), 600)",
              "valueFunction": "\"left\"(lower(${tenant_id}_mod_circulation_storage.f_unaccent(:value)), 600)",
              "valueGetter": "src_circulation_loan.jsonb -> 'status' ->> 'name'",
              "visibleByDefault": false
            },
            {
              "name": "user_active",
              "values": [
                {
                  "label": "True",
                  "value": "true"
                },
                {
                  "label": "False",
                  "value": "false"
                }
              ],
              "dataType": {
                "dataType": "booleanType"
              },
              "queryable": true,
              "filterValueGetter": "lower(${tenant_id}_mod_users.f_unaccent(user_details.jsonb ->> 'active'::text))",
              "valueFunction": "lower(${tenant_id}_mod_users.f_unaccent(:value))",
              "valueGetter": "user_details.jsonb ->> 'active'",
              "visibleByDefault": false
            },
            {
              "name": "user_barcode",
              "dataType": {
                "dataType": "stringType"
              },
              "queryable": true,
              "filterValueGetter": "lower(${tenant_id}_mod_users.f_unaccent(user_details.jsonb ->> 'barcode'::text))",
              "valueFunction": "lower(${tenant_id}_mod_users.f_unaccent(:value))",
              "valueGetter": "user_details.jsonb ->> 'barcode'",
              "visibleByDefault": true
            },
            {
              "name": "user_expiration_date",
              "dataType": {
                "dataType": "dateType"
              },
              "queryable": true,
              "filterValueGetter": "\"left\"(user_details.jsonb ->> 'expirationDate'::text, 600)",
              "valueFunction": "\"left\"(:value, 600)",
              "valueGetter": "user_details.jsonb ->> 'expirationDate'",
              "visibleByDefault": true
            },
            {
              "name": "user_first_name",
              "dataType": {
                "dataType": "stringType"
              },
              "queryable": true,
              "filterValueGetter": "\"left\"(lower(${tenant_id}_mod_users.f_unaccent((user_details.jsonb -> 'personal'::text) ->> 'firstName'::text)), 600)",
              "valueFunction": "\"left\"(lower(${tenant_id}_mod_users.f_unaccent(:value)), 600)",
              "valueGetter": "user_details.jsonb -> 'personal' ->> 'firstName'",
              "visibleByDefault": false
            },
            {
              "name": "user_full_name",
              "dataType": {
                "dataType": "stringType"
              },
              "queryable": true,
              "valueGetter": "concat(user_details.jsonb -> 'personal' ->> 'lastName', ', ', user_details.jsonb -> 'personal' ->> 'firstName')",
              "visibleByDefault": true
            },
            {
              "name": "user_id",
              "dataType": {
                "dataType": "rangedUUIDType"
              },
              "queryable": true,
              "valueGetter": "user_details.id",
              "visibleByDefault": false
            },
            {
              "name": "user_last_name",
              "dataType": {
                "dataType": "stringType"
              },
              "queryable": true,
              "filterValueGetter": "\"left\"(lower(${tenant_id}_mod_users.f_unaccent((user_details.jsonb -> 'personal'::text) ->> 'lastName'::text)), 600)",
              "valueFunction": "\"left\"(lower(${tenant_id}_mod_users.f_unaccent(:value)), 600)",
              "valueGetter": "user_details.jsonb -> 'personal' ->> 'lastName'",
              "visibleByDefault": false
            },
            {
              "name": "user_patron_group",
              "source": {
                "columnName": "user_patron_group",
                "entityTypeId": "4e09d89a-44ed-418e-a9cc-820dfb27bf3a"
              },
              "valueSourceApi": {
                "path": "groups",
                "valueJsonPath": "$.usergroups.*.id",
                "labelJsonPath": "$.usergroups.*.group"
              },
              "dataType": {
                "dataType": "stringType"
              },
              "queryable": true,
              "idColumnName": "user_patron_group_id",
              "filterValueGetter": "lower(${tenant_id}_mod_users.f_unaccent(patron_id_ref_data.jsonb ->> 'group'::text))",
              "valueFunction": "lower(${tenant_id}_mod_users.f_unaccent(:value))",
              "valueGetter": "patron_id_ref_data.jsonb ->> 'group'",
              "visibleByDefault": true
            },
            {
              "name": "user_patron_group_id",
              "dataType": {
                "dataType": "rangedUUIDType"
              },
              "queryable": true,
              "valueGetter": "patron_id_ref_data.id",
              "visibleByDefault": false
            }
          ],
          "defaultSort": [
            {
              "direction": "ASC",
              "columnName": "user_full_name"
            },
            {
              "direction": "ASC",
              "columnName": "loan_due_date"
            },
            {
              "direction": "ASC",
              "columnName": "id"
            }
          ]
        }
      </column>
      <where>id = '4e09d89a-44ed-418e-a9cc-820dfb27bf3a'</where>
    </update>
  </changeSet>
</databaseChangeLog>
