{
  id: 'cd9e34da-a81e-57e5-8111-6bab5d4ceba6',
  name: 'mod_orders_storage__titles',
  private: true,
  sources: [
    {
      type: 'db',
      alias: 'src__acquisition__orders_storage__titles',
      target: 'src__acquisition__orders_storage__titles',
    },
  ],
  requiredPermissions: [
    'orders-storage.titles.collection.get',
    'acquisitions-units.units.collection.get',
    'inventory-storage.identifier-types.collection.get',
  ],
  defaultSort: [
    {
      columnName: 'id',
      direction: 'ASC',
    },
  ],
  columns: [
    {
      name: 'id',
      dataType: {
        dataType: 'rangedUUIDType',
      },
      queryable: true,
      visibleByDefault: false,
      isIdColumn: true,
      valueGetter: "(:src__acquisition__orders_storage__titles.jsonb->>'id')::uuid",
      valueFunction: '(:value)::uuid',
      sourceAlias: 'src__acquisition__orders_storage__titles',
      essential: true,
    },
    {
      name: 'expected_receipt_date',
      dataType: {
        dataType: 'dateTimeType',
      },
      queryable: true,
      visibleByDefault: false,
      valueGetter: ":src__acquisition__orders_storage__titles.jsonb->>'expectedReceiptDate'",
      sourceAlias: 'src__acquisition__orders_storage__titles',
      filterValueGetter: "lower(${tenant_id}_mod_orders_storage.f_unaccent(:src__acquisition__orders_storage__titles.jsonb->>'expectedReceiptDate'::text))",
      valueFunction: 'lower(${tenant_id}_mod_orders_storage.f_unaccent(:value))',
      essential: true,
    },
    {
      name: 'title',
      dataType: {
        dataType: 'stringType',
      },
      queryable: true,
      visibleByDefault: false,
      valueGetter: ":src__acquisition__orders_storage__titles.jsonb->>'title'",
      sourceAlias: 'src__acquisition__orders_storage__titles',
      filterValueGetter: "lower(${tenant_id}_mod_orders_storage.f_unaccent(:src__acquisition__orders_storage__titles.jsonb->>'title'::text))",
      valueFunction: 'lower(${tenant_id}_mod_orders_storage.f_unaccent(:value))',
      essential: true,
    },
    {
      name: 'po_line_id',
      dataType: {
        dataType: 'rangedUUIDType',
      },
      queryable: true,
      visibleByDefault: false,
      valueGetter: "(:src__acquisition__orders_storage__titles.jsonb->>'poLineId')::uuid",
      valueFunction: '(:value)::uuid',
      sourceAlias: 'src__acquisition__orders_storage__titles',
      hidden: true,
      essential: true,
      joinsTo: [
        {
          targetId: '58148257-bfb0-4687-8c42-d2833d772f3e',
          targetField: 'id',
          direction: 'left',
          type: 'equality-cast-uuid',
        },
      ],
    },
    {
      name: 'instance_id',
      dataType: {
        dataType: 'rangedUUIDType',
      },
      queryable: true,
      visibleByDefault: false,
      valueGetter: "(:src__acquisition__orders_storage__titles.jsonb->>'instanceId')::uuid",
      valueFunction: '(:value)::uuid',
      sourceAlias: 'src__acquisition__orders_storage__titles',
      hidden: true,
      essential: true,
      joinsTo: [
        {
          targetId: '8fc4a9d2-7ccf-4233-afb8-796911839862',
          targetField: 'id',
          direction: 'left',
          type: 'equality-cast-uuid',
        },
      ],
    },
    {
      name: 'next_sequence_number',
      dataType: {
        dataType: 'integerType',
      },
      queryable: true,
      visibleByDefault: false,
      valueGetter: "(:src__acquisition__orders_storage__titles.jsonb->>'nextSequenceNumber')::integer",
      valueFunction: '(:value)::integer',
      sourceAlias: 'src__acquisition__orders_storage__titles',
      essential: true,
    },
    {
      name: 'product_ids',
      dataType: {
        dataType: 'arrayType',
        itemDataType: {
          dataType: 'objectType',
          properties: [
            {
              name: 'product_id',
              queryable: true,
              valueGetter: "(SELECT array_agg(elems.value->>'productId') FROM jsonb_array_elements(:src__acquisition__orders_storage__titles.jsonb->'productIds') AS elems)",
              filterValueGetter: "(SELECT array_agg(lower(elems.value->>'productId')) FROM jsonb_array_elements(:src__acquisition__orders_storage__titles.jsonb->'productIds') AS elems)",
              valueFunction: 'lower(:value)',
              property: 'productId',
              dataType: {
                dataType: 'stringType',
              },
            },
            {
              name: 'product_id_type',
              queryable: true,
              source: {
                columnName: 'name',
                entityTypeId: 'a0c8f96f-b630-41d5-bce3-e5b0512c4e48',
              },
              valueGetter: "(SELECT array_agg(identifier_type.jsonb ->> 'name') FROM jsonb_array_elements(:src__acquisition__orders_storage__titles.jsonb->'productIds') AS elems LEFT JOIN ${tenant_id}_mod_fqm_manager.src_inventory_identifier_type identifier_type ON (elems.value->>'productIdType')::uuid = identifier_type.id)",
              filterValueGetter: "(SELECT array_agg(lower(identifier_type.jsonb ->> 'name')) FROM jsonb_array_elements(:src__acquisition__orders_storage__titles.jsonb->'productIds') AS elems LEFT JOIN ${tenant_id}_mod_fqm_manager.src_inventory_identifier_type identifier_type ON (elems.value->>'productIdType')::uuid = identifier_type.id)",
              valueFunction: 'lower(:value)',
              property: 'productIdType',
              dataType: {
                dataType: 'stringType',
              },
            },
            {
              name: 'qualifier',
              queryable: true,
              valueGetter: "(SELECT array_agg(elems.value->>'qualifier') FROM jsonb_array_elements(:src__acquisition__orders_storage__titles.jsonb->'productIds') AS elems)",
              filterValueGetter: "(SELECT array_agg(lower(elems.value->>'qualifier')) FROM jsonb_array_elements(:src__acquisition__orders_storage__titles.jsonb->'productIds') AS elems)",
              valueFunction: 'lower(:value)',
              property: 'qualifier',
              dataType: {
                dataType: 'stringType',
              },
            },
          ],
        },
      },
      queryable: false,
      visibleByDefault: false,
      valueGetter: "( SELECT jsonb_agg(record.value || jsonb_build_object('productIdType', identifier_type.jsonb ->> 'name') ORDER BY record.value ->> 'productIdType') FROM jsonb_array_elements((:sourceAlias.jsonb -> 'productIds')) record(value) LEFT join ${tenant_id}_mod_fqm_manager.src_inventory_identifier_type identifier_type ON (record.value ->> 'productIdType') = identifier_type.id::text)::text",
      sourceAlias: 'src__acquisition__orders_storage__titles',
      essential: true,
    },
    {
      name: 'contributors',
      dataType: {
        dataType: 'arrayType',
        itemDataType: {
          dataType: 'objectType',
          properties: [
            {
              name: 'contributor',
              queryable: true,
              valueGetter: "(SELECT array_agg(elems.value->>'contributor') FROM jsonb_array_elements(:src__acquisition__orders_storage__titles.jsonb->'contributors') AS elems)",
              filterValueGetter: "(SELECT array_agg(lower(elems.value->>'contributor')) FROM jsonb_array_elements(:src__acquisition__orders_storage__titles.jsonb->'contributors') AS elems)",
              valueFunction: 'lower(:value)',
              property: 'contributor',
              dataType: {
                dataType: 'stringType',
              },
            },
            {
              name: 'contributor_name_type_id',
              queryable: true,
              hidden: true,
              valueGetter: "(SELECT array_agg((elems.value->>'contributorNameTypeId')::uuid) FROM jsonb_array_elements(:src__acquisition__orders_storage__titles.jsonb->'contributors') AS elems)",
              valueFunction: '(:value)::uuid',
              property: 'contributorNameTypeId',
              dataType: {
                dataType: 'rangedUUIDType',
              },
            },
          ],
        },
      },
      queryable: false,
      visibleByDefault: false,
      valueGetter: ":src__acquisition__orders_storage__titles.jsonb->>'contributors'",
      sourceAlias: 'src__acquisition__orders_storage__titles',
      filterValueGetter: "lower(${tenant_id}_mod_orders_storage.f_unaccent(:src__acquisition__orders_storage__titles.jsonb->>'contributors'::text))",
      valueFunction: 'lower(${tenant_id}_mod_orders_storage.f_unaccent(:value))',
      essential: true,
    },
    {
      name: 'publisher',
      dataType: {
        dataType: 'stringType',
      },
      queryable: true,
      visibleByDefault: false,
      valueGetter: ":src__acquisition__orders_storage__titles.jsonb->>'publisher'",
      sourceAlias: 'src__acquisition__orders_storage__titles',
      filterValueGetter: "lower(${tenant_id}_mod_orders_storage.f_unaccent(:src__acquisition__orders_storage__titles.jsonb->>'publisher'::text))",
      valueFunction: 'lower(${tenant_id}_mod_orders_storage.f_unaccent(:value))',
      essential: true,
    },
    {
      name: 'edition',
      dataType: {
        dataType: 'stringType',
      },
      queryable: true,
      visibleByDefault: false,
      valueGetter: ":src__acquisition__orders_storage__titles.jsonb->>'edition'",
      sourceAlias: 'src__acquisition__orders_storage__titles',
      filterValueGetter: "lower(${tenant_id}_mod_orders_storage.f_unaccent(:src__acquisition__orders_storage__titles.jsonb->>'edition'::text))",
      valueFunction: 'lower(${tenant_id}_mod_orders_storage.f_unaccent(:value))',
      essential: true,
    },
    {
      name: 'package_name',
      dataType: {
        dataType: 'stringType',
      },
      queryable: true,
      visibleByDefault: false,
      valueGetter: ":src__acquisition__orders_storage__titles.jsonb->>'packageName'",
      sourceAlias: 'src__acquisition__orders_storage__titles',
      filterValueGetter: "lower(${tenant_id}_mod_orders_storage.f_unaccent(:src__acquisition__orders_storage__titles.jsonb->>'packageName'::text))",
      valueFunction: 'lower(${tenant_id}_mod_orders_storage.f_unaccent(:value))',
      essential: true,
    },
    {
      name: 'po_line_number',
      dataType: {
        dataType: 'stringType',
      },
      queryable: true,
      visibleByDefault: false,
      valueGetter: ":src__acquisition__orders_storage__titles.jsonb->>'poLineNumber'",
      sourceAlias: 'src__acquisition__orders_storage__titles',
      filterValueGetter: "lower(${tenant_id}_mod_orders_storage.f_unaccent(:src__acquisition__orders_storage__titles.jsonb->>'poLineNumber'::text))",
      valueFunction: 'lower(${tenant_id}_mod_orders_storage.f_unaccent(:value))',
      essential: true,
    },
    {
      name: 'published_date',
      dataType: {
        dataType: 'stringType',
      },
      queryable: true,
      visibleByDefault: false,
      valueGetter: ":src__acquisition__orders_storage__titles.jsonb->>'publishedDate'",
      sourceAlias: 'src__acquisition__orders_storage__titles',
      filterValueGetter: "lower(${tenant_id}_mod_orders_storage.f_unaccent(:src__acquisition__orders_storage__titles.jsonb->>'publishedDate'::text))",
      valueFunction: 'lower(${tenant_id}_mod_orders_storage.f_unaccent(:value))',
      essential: true,
    },
    {
      name: 'receiving_note',
      dataType: {
        dataType: 'stringType',
      },
      queryable: true,
      visibleByDefault: false,
      valueGetter: ":src__acquisition__orders_storage__titles.jsonb->>'receivingNote'",
      sourceAlias: 'src__acquisition__orders_storage__titles',
      filterValueGetter: "lower(${tenant_id}_mod_orders_storage.f_unaccent(:src__acquisition__orders_storage__titles.jsonb->>'receivingNote'::text))",
      valueFunction: 'lower(${tenant_id}_mod_orders_storage.f_unaccent(:value))',
      essential: true,
    },
    {
      name: 'subscription_from',
      dataType: {
        dataType: 'dateTimeType',
      },
      queryable: true,
      visibleByDefault: false,
      valueGetter: ":src__acquisition__orders_storage__titles.jsonb->>'subscriptionFrom'",
      sourceAlias: 'src__acquisition__orders_storage__titles',
      filterValueGetter: "lower(${tenant_id}_mod_orders_storage.f_unaccent(:src__acquisition__orders_storage__titles.jsonb->>'subscriptionFrom'::text))",
      valueFunction: 'lower(${tenant_id}_mod_orders_storage.f_unaccent(:value))',
      essential: true,
    },
    {
      name: 'subscription_to',
      dataType: {
        dataType: 'dateTimeType',
      },
      queryable: true,
      visibleByDefault: false,
      valueGetter: ":src__acquisition__orders_storage__titles.jsonb->>'subscriptionTo'",
      sourceAlias: 'src__acquisition__orders_storage__titles',
      filterValueGetter: "lower(${tenant_id}_mod_orders_storage.f_unaccent(:src__acquisition__orders_storage__titles.jsonb->>'subscriptionTo'::text))",
      valueFunction: 'lower(${tenant_id}_mod_orders_storage.f_unaccent(:value))',
      essential: true,
    },
    {
      name: 'subscription_interval',
      dataType: {
        dataType: 'integerType',
      },
      queryable: true,
      visibleByDefault: false,
      valueGetter: "(:src__acquisition__orders_storage__titles.jsonb->>'subscriptionInterval')::integer",
      valueFunction: '(:value)::integer',
      sourceAlias: 'src__acquisition__orders_storage__titles',
      essential: true,
    },
    {
      name: 'claiming_active',
      dataType: {
        dataType: 'booleanType',
      },
      queryable: true,
      visibleByDefault: false,
      valueGetter: ":src__acquisition__orders_storage__titles.jsonb->>'claimingActive'",
      sourceAlias: 'src__acquisition__orders_storage__titles',
      filterValueGetter: "lower(${tenant_id}_mod_orders_storage.f_unaccent(:src__acquisition__orders_storage__titles.jsonb->>'claimingActive'::text))",
      valueFunction: 'lower(${tenant_id}_mod_orders_storage.f_unaccent(:value))',
      values: [
        {
          value: 'true',
          label: 'True',
        },
        {
          value: 'false',
          label: 'False',
        },
      ],
      essential: true,
    },
    {
      name: 'claiming_interval',
      dataType: {
        dataType: 'integerType',
      },
      queryable: true,
      visibleByDefault: false,
      valueGetter: "(:src__acquisition__orders_storage__titles.jsonb->>'claimingInterval')::integer",
      valueFunction: '(:value)::integer',
      sourceAlias: 'src__acquisition__orders_storage__titles',
      essential: true,
    },
    {
      name: 'is_acknowledged',
      dataType: {
        dataType: 'booleanType',
      },
      queryable: true,
      visibleByDefault: false,
      valueGetter: ":src__acquisition__orders_storage__titles.jsonb->>'isAcknowledged'",
      sourceAlias: 'src__acquisition__orders_storage__titles',
      filterValueGetter: "lower(${tenant_id}_mod_orders_storage.f_unaccent(:src__acquisition__orders_storage__titles.jsonb->>'isAcknowledged'::text))",
      valueFunction: 'lower(${tenant_id}_mod_orders_storage.f_unaccent(:value))',
      values: [
        {
          value: 'true',
          label: 'True',
        },
        {
          value: 'false',
          label: 'False',
        },
      ],
      essential: true,
    },
    {
      name: 'bind_item_ids',
      dataType: {
        dataType: 'jsonbArrayType',
        itemDataType: {
          dataType: 'rangedUUIDType',
        },
      },
      queryable: true,
      visibleByDefault: false,
      valueGetter: ":src__acquisition__orders_storage__titles.jsonb->>'bindItemIds'",
      sourceAlias: 'src__acquisition__orders_storage__titles',
      filterValueGetter: "lower(${tenant_id}_mod_orders_storage.f_unaccent(:src__acquisition__orders_storage__titles.jsonb->>'bindItemIds'::text))",
      valueFunction: 'lower(${tenant_id}_mod_orders_storage.f_unaccent(:value))',
      hidden: true,
      essential: true,
    },
    {
      name: 'acq_unit_ids',
      dataType: {
        dataType: 'jsonbArrayType',
        itemDataType: {
          dataType: 'rangedUUIDType',
        },
      },
      queryable: true,
      visibleByDefault: false,
      valueGetter: ":src__acquisition__orders_storage__titles.jsonb->>'acqUnitIds'",
      sourceAlias: 'src__acquisition__orders_storage__titles',
      filterValueGetter: "lower(${tenant_id}_mod_orders_storage.f_unaccent(:src__acquisition__orders_storage__titles.jsonb->>'acqUnitIds'::text))",
      valueFunction: 'lower(${tenant_id}_mod_orders_storage.f_unaccent(:value))',
      hidden: true,
      essential: true,
    },
    {
      name: 'metadata_created_date',
      dataType: {
        dataType: 'dateTimeType',
      },
      queryable: true,
      visibleByDefault: false,
      essential: true,
      valueGetter: ":src__acquisition__orders_storage__titles.jsonb->'metadata'->>'createdDate'",
      sourceAlias: 'src__acquisition__orders_storage__titles',
    },
    {
      name: 'metadata_created_by_user_id',
      dataType: {
        dataType: 'rangedUUIDType',
      },
      queryable: true,
      visibleByDefault: false,
      hidden: true,
      essential: true,
      joinsTo: [
        {
          targetId: 'bb058933-cd06-4539-bd3a-6f248ff98ee2',
          targetField: 'id',
          direction: 'left',
          type: 'equality-cast-uuid',
        },
        {
          targetId: 'f2615ea6-450b-425d-804d-6a495afd9308',
          targetField: 'id',
          direction: 'left',
          type: 'equality-cast-uuid',
        },
      ],
      valueGetter: "(:src__acquisition__orders_storage__titles.jsonb->'metadata'->>'createdByUserId')::uuid",
      valueFunction: '(:value)::uuid',
      sourceAlias: 'src__acquisition__orders_storage__titles',
    },
    {
      name: 'metadata_created_by_username',
      dataType: {
        dataType: 'stringType',
      },
      queryable: true,
      visibleByDefault: false,
      hidden: true,
      valueGetter: ":src__acquisition__orders_storage__titles.jsonb->'metadata'->>'createdByUsername'",
      sourceAlias: 'src__acquisition__orders_storage__titles',
    },
    {
      name: 'metadata_updated_date',
      dataType: {
        dataType: 'dateTimeType',
      },
      queryable: true,
      visibleByDefault: false,
      essential: true,
      valueGetter: ":src__acquisition__orders_storage__titles.jsonb->'metadata'->>'updatedDate'",
      sourceAlias: 'src__acquisition__orders_storage__titles',
    },
    {
      name: 'metadata_updated_by_user_id',
      dataType: {
        dataType: 'rangedUUIDType',
      },
      queryable: true,
      visibleByDefault: false,
      hidden: true,
      essential: true,
      joinsTo: [
        {
          targetId: 'bb058933-cd06-4539-bd3a-6f248ff98ee2',
          targetField: 'id',
          direction: 'left',
          type: 'equality-cast-uuid',
        },
        {
          targetId: 'f2615ea6-450b-425d-804d-6a495afd9308',
          targetField: 'id',
          direction: 'left',
          type: 'equality-cast-uuid',
        },
      ],
      valueGetter: "(:src__acquisition__orders_storage__titles.jsonb->'metadata'->>'updatedByUserId')::uuid",
      valueFunction: '(:value)::uuid',
      sourceAlias: 'src__acquisition__orders_storage__titles',
    },
    {
      name: 'metadata_updated_by_username',
      dataType: {
        dataType: 'stringType',
      },
      queryable: true,
      visibleByDefault: false,
      hidden: true,
      valueGetter: ":src__acquisition__orders_storage__titles.jsonb->'metadata'->>'updatedByUsername'",
      sourceAlias: 'src__acquisition__orders_storage__titles',
    },
    {
      name: 'jsonb',
      dataType: {
        dataType: 'stringType',
      },
      isIdColumn: false,
      essential: true,
      hidden: true,
      queryable: false,
      visibleByDefault: false,
      valueGetter: ':src__acquisition__orders_storage__titles.jsonb::text',
    },
    {
      name: 'acq_unit_names',
      dataType: {
        dataType: 'jsonbArrayType',
        itemDataType: {
          dataType: 'stringType',
        },
      },
      sourceAlias: 'src__acquisition__orders_storage__titles',
      idColumnName: 'acq_unit_ids',
      queryable: true,
      essential: true,
      visibleByDefault: false,
      valueGetter: "( SELECT jsonb_agg(acq_unit.jsonb ->> 'name') FILTER (WHERE (acq_unit.jsonb ->> 'name') IS NOT NULL) FROM jsonb_array_elements_text(:sourceAlias.jsonb -> 'acqUnitIds') record(value) JOIN src_acquisitions_unit acq_unit ON record.value::text = acq_unit.id::text )",
      valueFunction: 'lower(:value)',
      source: {
        columnName: 'name',
        entityTypeId: '661633d0-4cb5-4764-a108-2132b80320ec',
      },
    },
  ],
}
