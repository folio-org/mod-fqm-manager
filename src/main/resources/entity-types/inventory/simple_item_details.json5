{
  id: '372e025a-9444-473a-9ffd-fa0f63db1674',
  name: 'simple_item_details',
  private: true,
  sources: [
    {
      alias: 'item',
      type: 'db',
      target: 'src_inventory_item',
    },
  ],
  requiredPermissions: [
    'inventory-storage.items.item.get'
  ],
  columns: [
    {
      name: 'id',
      sourceAlias: 'item',
      dataType: {
        dataType: 'rangedUUIDType',
      },
      isIdColumn: true,
      queryable: true,
      visibleByDefault: false,
      valueGetter: ':sourceAlias.id',
    },
    {
      name: 'hrid',
      sourceAlias: 'item',
      dataType: {
        dataType: 'rangedUUIDType',
      },
      isIdColumn: false,
      queryable: true,
      visibleByDefault: false,
      valueGetter: ":sourceAlias.jsonb ->> 'hrid'",
      filterValueGetter: "lower(${tenant_id}_mod_inventory_storage.f_unaccent(:sourceAlias.jsonb ->> 'hrid'::text))",
      valueFunction: 'lower(${tenant_id}_mod_inventory_storage.f_unaccent(:value))'
    },
    {
      name: 'notes',
      sourceAlias: 'item',
      dataType: {
        dataType: 'arrayType',
        itemDataType: {
          dataType: 'objectType',
          properties: [
            {
              name: 'note',
              property: 'note',
              dataType: {
                dataType: 'stringType',
              },
              queryable: false,
              valueGetter: "( SELECT array_agg(elems.value->>'note') FROM jsonb_array_elements(:sourceAlias.jsonb->'notes') AS elems)",
              filterValueGetter: "( SELECT array_agg(lower(elems.value->>'note')) FROM jsonb_array_elements(:sourceAlias.jsonb->'notes') AS elems)",
              valueFunction: 'lower(:value)',
            },
            {
              name: 'staff_only',
              property: 'staffOnly',
              dataType: {
                dataType: 'booleanType',
              },
              queryable: false,
              values: [
                {
                  value: 'true',
                  label: 'True',
                },
                {
                  value: 'false',
                  label: 'False',
                },
              ],
              valueGetter: "( SELECT array_agg(elems.value->>'staffOnly') FROM jsonb_array_elements(:sourceAlias.jsonb->'notes') AS elems)",
              filterValueGetter: "( SELECT array_agg(lower(elems.value->>'staffOnly')) FROM jsonb_array_elements(:sourceAlias.jsonb->'notes') AS elems)",
              valueFunction: 'lower(:value)',
            },
            {
              name: 'item_note_type_id',
              property: 'itemNoteTypeId',
              dataType: {
                dataType: 'stringType',
              },
              queryable: false,
              valueGetter: "( SELECT array_agg(elems.value->>'itemNoteTypeId') FROM jsonb_array_elements(:sourceAlias.jsonb->'notes') AS elems)",
              filterValueGetter: "( SELECT array_agg(lower(elems.value->>'itemNoteTypeId')) FROM jsonb_array_elements(:sourceAlias.jsonb->'notes') AS elems)",
              valueFunction: 'lower(:value)',
            },
          ],
        },
      },
      isIdColumn: false,
      queryable: false,
      visibleByDefault: false,
      valueGetter: ":sourceAlias.jsonb->>'notes'",
    },
    {
      name: 'status_date',
      sourceAlias: 'item',
      dataType: {
        dataType: 'dateType',
      },
      isIdColumn: false,
      queryable: true,
      visibleByDefault: false,
      valueGetter: ":sourceAlias.jsonb->'status'->>'date'",
    },
    {
      name: 'status_name',
      sourceAlias: 'item',
      dataType: {
        dataType: 'stringType',
      },
      isIdColumn: false,
      queryable: true,
      visibleByDefault: false,
      valueGetter: ":sourceAlias.jsonb->'status'->>'name'",
      filterValueGetter: "\"left\"(lower(${tenant_id}_mod_inventory_storage.f_unaccent((:sourceAlias.jsonb -> 'status'::text) ->> 'name'::text)), 600)",
      valueFunction: '"left"(lower(${tenant_id}_mod_inventory_storage.f_unaccent(:value)), 600)',
      values: [
        {
          label: 'Aged to lost',
          value: 'Aged to lost',
        },
        {
          label: 'Available',
          value: 'Available',
        },
        {
          label: 'Awaiting pickup',
          value: 'Awaiting pickup',
        },
        {
          label: 'Awaiting delivery',
          value: 'Awaiting delivery',
        },
        {
          label: 'Checked out',
          value: 'Checked out',
        },
        {
          label: 'Claimed returned',
          value: 'Claimed returned',
        },
        {
          label: 'Declared lost',
          value: 'Declared lost',
        },
        {
          label: 'In process',
          value: 'In process',
        },
        {
          label: 'In process (non-requestable)',
          value: 'In process (non-requestable)',
        },
        {
          label: 'In transit',
          value: 'In transit',
        },
        {
          label: 'Intellectual item',
          value: 'Intellectual item',
        },
        {
          label: 'Long missing',
          value: 'Long missing',
        },
        {
          label: 'Lost and paid',
          value: 'Lost and paid',
        },
        {
          label: 'Missing',
          value: 'Missing',
        },
        {
          label: 'On order',
          value: 'On order',
        },
        {
          label: 'Paged',
          value: 'Paged',
        },
        {
          label: 'Restricted',
          value: 'Restricted',
        },
        {
          label: 'Order closed',
          value: 'Order closed',
        },
        {
          label: 'Unavailable',
          value: 'Unavailable',
        },
        {
          label: 'Unknown',
          value: 'Unknown',
        },
        {
          label: 'Withdrawn',
          value: 'Withdrawn',
        },
      ]
    },
    {
      name: 'barcode',
      sourceAlias: 'item',
      dataType: {
        dataType: 'stringType',
      },
      isIdColumn: false,
      queryable: true,
      visibleByDefault: false,
      valueGetter: ":sourceAlias.jsonb->>'barcode'",
      filterValueGetter: "lower(:sourceAlias.jsonb ->> 'barcode'::text)",
      valueFunction: 'lower(:value)'
    },
    {
      name: 'version',
      sourceAlias: 'item',
      dataType: {
        dataType: 'integerType',
      },
      isIdColumn: false,
      queryable: true,
      visibleByDefault: false,
      valueGetter: "(:sourceAlias.jsonb->>'_version')::integer",
      valueFunction: '(:value)::integer',
    },
    {
      name: 'created_date',
      sourceAlias: 'item',
      dataType: {
        dataType: 'dateType',
      },
      isIdColumn: false,
      queryable: true,
      visibleByDefault: false,
      valueGetter: ":sourceAlias.jsonb->'metadata'->>'createdDate'",
    },
    {
      name: 'updated_date',
      sourceAlias: 'item',
      dataType: {
        dataType: 'dateType',
      },
      isIdColumn: false,
      queryable: true,
      visibleByDefault: false,
      valueGetter: ":sourceAlias.jsonb->'metadata'->>'updatedDate'",
    },
    {
      name: 'updated_by_user_id',
      sourceAlias: 'item',
      dataType: {
        dataType: 'rangedUUIDType',
      },
      isIdColumn: false,
      queryable: true,
      visibleByDefault: false,
      valueGetter: ":sourceAlias.jsonb->'metadata'->>'updatedByUserId'",
    },
    {
      name: 'created_by_user_id',
      sourceAlias: 'item',
      dataType: {
        dataType: 'rangedUUIDType',
      },
      isIdColumn: false,
      queryable: true,
      visibleByDefault: false,
      valueGetter: ":sourceAlias.jsonb->'metadata'->>'createdByUserId'",
    },
    {
      name: 'former_ids',
      sourceAlias: 'item',
      dataType: {
        dataType: 'arrayType',
        itemDataType: {
          dataType: 'stringType',
        },
      },
      isIdColumn: false,
      queryable: false,
      visibleByDefault: false,
      valueGetter: "(\
        SELECT\
          array_agg(elems.value::text)\
        FROM\
          jsonb_array_elements(:sourceAlias.jsonb->'formerIds') AS elems\
      )",
      filterValueGetter: "(\
        SELECT\
          array_agg(lower(elems.value::text))\
        FROM\
          jsonb_array_elements(:sourceAlias.jsonb->'formerIds') AS elems\
      )",
    },
    {
      name: 'copy_number',
      sourceAlias: 'item',
      dataType: {
        dataType: 'stringType',
      },
      isIdColumn: false,
      queryable: true,
      visibleByDefault: false,
      valueGetter: ":sourceAlias.jsonb->>'copyNumber'",
    },
    {
      name: 'year_caption',
      sourceAlias: 'item',
      dataType: {
        dataType: 'arrayType',
        itemDataType: {
          dataType: 'stringType',
        },
      },
      isIdColumn: false,
      queryable: false,
      visibleByDefault: false,
      valueGetter: "(\
        SELECT\
          array_agg(elems.value::text)\
        FROM\
          jsonb_array_elements(:sourceAlias.jsonb->'yearCaption') AS elems\
      )",
      filterValueGetter: "(\
        SELECT\
          array_agg(lower(elems.value::text))\
        FROM\
          jsonb_array_elements(:sourceAlias.jsonb->'yearCaption') AS elems\
      )",
    },
    {
      name: 'material_type_id',
      sourceAlias: 'item',
      dataType: {
        dataType: 'rangedUUIDType',
      },
      isIdColumn: false,
      queryable: true,
      visibleByDefault: false,
      valueGetter: ":sourceAlias.materialtypeid",
    },
    {
      name: 'circulation_notes',
      sourceAlias: 'item',
      dataType: {
        dataType: 'arrayType',
        itemDataType: {
          dataType: 'objectType',
          properties: [
            {
              name: 'id',
              property: 'id',
              dataType: {
                dataType: 'stringType',
              },
              queryable: false,
              valueGetter: "( SELECT array_agg(elems.value->>'id') FROM jsonb_array_elements(:sourceAlias.jsonb->'circulationNotes') AS elems)",
              filterValueGetter: "( SELECT array_agg(lower(elems.value->>'id')) FROM jsonb_array_elements(:sourceAlias.jsonb->'circulationNotes') AS elems)",
              valueFunction: 'lower(:value)',
            },
            {
              name: 'date',
              property: 'date',
              dataType: {
                dataType: 'dateType',
              },
              queryable: false,
              valueGetter: "( SELECT array_agg(elems.value->>'date') FROM jsonb_array_elements(:sourceAlias.jsonb->'circulationNotes') AS elems)",
              filterValueGetter: "( SELECT array_agg(lower(elems.value->>'date')) FROM jsonb_array_elements(:sourceAlias.jsonb->'circulationNotes') AS elems)",
              valueFunction: 'lower(:value)',
            },
            {
              name: 'note',
              property: 'note',
              dataType: {
                dataType: 'stringType',
              },
              queryable: false,
              valueGetter: "( SELECT array_agg(elems.value->>'note') FROM jsonb_array_elements(:sourceAlias.jsonb->'circulationNotes') AS elems)",
              filterValueGetter: "( SELECT array_agg(lower(elems.value->>'note')) FROM jsonb_array_elements(:sourceAlias.jsonb->'circulationNotes') AS elems)",
              valueFunction: 'lower(:value)',
            },
            {
              name: 'note_type',
              property: 'noteType',
              dataType: {
                dataType: 'stringType',
              },
              queryable: false,
              valueGetter: "( SELECT array_agg(elems.value->>'noteType') FROM jsonb_array_elements(:sourceAlias.jsonb->'circulationNotes') AS elems)",
              filterValueGetter: "( SELECT array_agg(lower(elems.value->>'noteType')) FROM jsonb_array_elements(:sourceAlias.jsonb->'circulationNotes') AS elems)",
              valueFunction: 'lower(:value)',
            },
            {
              name: 'staff_only',
              property: 'staffOnly',
              dataType: {
                dataType: 'booleanType',
              },
              queryable: false,
              values: [
                {
                  value: 'true',
                  label: 'True',
                },
                {
                  value: 'false',
                  label: 'False',
                },
              ],
              valueGetter: "( SELECT array_agg(elems.value->>'staffOnly') FROM jsonb_array_elements(:sourceAlias.jsonb->'circulationNotes') AS elems)",
              filterValueGetter: "( SELECT array_agg(lower(elems.value->>'staffOnly')) FROM jsonb_array_elements(:sourceAlias.jsonb->'circulationNotes') AS elems)",
              valueFunction: 'lower(:value)',
            },
            {
              name: 'source',
              property: 'source',
              dataType: {
                dataType: 'objectType',
                properties: [
                  {
                    name: 'id',
                    property: 'id',
                    dataType: {
                      dataType: 'stringType',
                    },
                    queryable: false,
                    valueGetter: "( SELECT array_agg(elems.value->>'id') FROM jsonb_array_elements(:sourceAlias.jsonb->'circulationNotes'->'source') AS elems)",
                    filterValueGetter: "( SELECT array_agg(lower(elems.value->>'id')) FROM jsonb_array_elements(:sourceAlias.jsonb->'circulationNotes'->'source') AS elems)",
                    valueFunction: 'lower(:value)',
                  },
                  {
                    name: 'personal',
                    property: 'personal',
                    dataType: {
                      dataType: 'objectType',
                      properties: [
                        {
                          name: 'last_name',
                          property: 'lastName',
                          dataType: {
                            dataType: 'stringType',
                          },
                          queryable: false,
                          valueGetter: "( SELECT array_agg(elems.value->>'lastName') FROM jsonb_array_elements(:sourceAlias.jsonb->'circulationNotes'->'source'->'personal') AS elems)",
                          filterValueGetter: "( SELECT array_agg(lower(elems.value->>'lastName')) FROM jsonb_array_elements(:sourceAlias.jsonb->'circulationNotes'->'source'->'personal') AS elems)",
                          valueFunction: 'lower(:value)',
                        },
                        {
                          name: 'first_name',
                          property: 'firstName',
                          dataType: {
                            dataType: 'stringType',
                          },
                          queryable: false,
                          valueGetter: "( SELECT array_agg(elems.value->>'firstName') FROM jsonb_array_elements(:sourceAlias.jsonb->'circulationNotes'->'source'->'personal') AS elems)",
                          filterValueGetter: "( SELECT array_agg(lower(elems.value->>'firstName')) FROM jsonb_array_elements(:sourceAlias.jsonb->'circulationNotes'->'source'->'personal') AS elems)",
                          valueFunction: 'lower(:value)',
                        },
                      ],
                    },
                    queryable: false,
                    valueGetter: "( SELECT array_agg(elems.value->>'personal') FROM jsonb_array_elements(:sourceAlias.jsonb->'circulationNotes'->'source') AS elems)",
                    filterValueGetter: "( SELECT array_agg(lower(elems.value->>'personal')) FROM jsonb_array_elements(:sourceAlias.jsonb->'circulationNotes'->'source') AS elems)",
                    valueFunction: 'lower(:value)',
                  },
                ],
              },
              queryable: false,
              valueGetter: "( SELECT array_agg(elems.value->>'source') FROM jsonb_array_elements(:sourceAlias.jsonb->'circulationNotes') AS elems)",
              filterValueGetter: "( SELECT array_agg(lower(elems.value->>'source')) FROM jsonb_array_elements(:sourceAlias.jsonb->'circulationNotes') AS elems)",
              valueFunction: 'lower(:value)',
            },
          ],
        },
      },
      isIdColumn: false,
      queryable: false,
      visibleByDefault: false,
      valueGetter: ":sourceAlias.jsonb->>'circulationNotes'",
    },
    {
      name: 'electronic_access',
      sourceAlias: 'item',
      dataType: {
        dataType: 'arrayType',
        itemDataType: {
          dataType: 'objectType',
          properties: [
            {
              name: 'uri',
              property: 'uri',
              dataType: {
                dataType: 'stringType',
              },
              queryable: false,
              valueGetter: "( SELECT array_agg(elems.value->>'uri') FROM jsonb_array_elements(:sourceAlias.jsonb->'electronicAccess') AS elems)",
              filterValueGetter: "( SELECT array_agg(lower(elems.value->>'uri')) FROM jsonb_array_elements(:sourceAlias.jsonb->'electronicAccess') AS elems)",
              valueFunction: 'lower(:value)',
            },
            {
              name: 'link_text',
              property: 'linkText',
              dataType: {
                dataType: 'stringType',
              },
              queryable: false,
              valueGetter: "( SELECT array_agg(elems.value->>'linkText') FROM jsonb_array_elements(:sourceAlias.jsonb->'electronicAccess') AS elems)",
              filterValueGetter: "( SELECT array_agg(lower(elems.value->>'linkText')) FROM jsonb_array_elements(:sourceAlias.jsonb->'electronicAccess') AS elems)",
              valueFunction: 'lower(:value)',
            },
            {
              name: 'relationship_id',
              property: 'relationshipId',
              dataType: {
                dataType: 'stringType',
              },
              queryable: false,
              valueGetter: "( SELECT array_agg(elems.value->>'relationshipId') FROM jsonb_array_elements(:sourceAlias.jsonb->'electronicAccess') AS elems)",
              filterValueGetter: "( SELECT array_agg(lower(elems.value->>'relationshipId')) FROM jsonb_array_elements(:sourceAlias.jsonb->'electronicAccess') AS elems)",
              valueFunction: 'lower(:value)',
            },
          ],
        },
      },
      isIdColumn: false,
      queryable: false,
      visibleByDefault: false,
      valueGetter: ":sourceAlias.jsonb->>'electronicAccess'",
    },
    {
      name: 'holdings_record_id',
      sourceAlias: 'item',
      dataType: {
        dataType: 'rangedUUIDType',
      },
      isIdColumn: false,
      queryable: true,
      visibleByDefault: false,
      valueGetter: ":sourceAlias.holdingsrecordid",
    },
    {
      name: 'statistical_code_ids',
      sourceAlias: 'item',
      dataType: {
        dataType: 'arrayType',
        itemDataType: {
          dataType: 'rangedUUIDType',
        },
      },
      isIdColumn: false,
      queryable: false,
      visibleByDefault: false,
      valueGetter: "(\
        SELECT\
          array_agg(elems.value::text)\
        FROM\
          jsonb_array_elements(:sourceAlias.jsonb->'statisticalCodeIds') AS elems\
      )",
      filterValueGetter: "(\
        SELECT\
          array_agg(lower(elems.value::text))\
        FROM\
          jsonb_array_elements(:sourceAlias.jsonb->'statisticalCodeIds') AS elems\
      )",
      valueFunction: 'lower(:value)',
    },
    {
      name: 'statistical_code_names',
      sourceAlias: 'item',
      dataType: {
        dataType: 'arrayType',
        itemDataType: {
          dataType: 'stringType',
        },
      },
      idColumnName: 'statistical_code_ids',
      isIdColumn: false,
      queryable: false,
      visibleByDefault: false,
      valueGetter: "( SELECT array_agg(statcode.statistical_code) FILTER (WHERE (statcode.statistical_code) IS NOT NULL) AS array_agg FROM jsonb_array_elements_text((:sourceAlias.jsonb -> 'statisticalCodeIds'::text)) record(value) JOIN drv_inventory_statistical_code_full statcode ON (record.value::text) = statcode.id::text)",
      filterValueGetter: "( SELECT array_agg(lower(statcode.statistical_code)) FILTER (WHERE (statcode.statistical_code) IS NOT NULL) AS array_agg FROM jsonb_array_elements_text((:sourceAlias.jsonb -> 'statisticalCodeIds'::text)) record(value) JOIN drv_inventory_statistical_code_full statcode ON (record.value::text) = statcode.id::text)",
      valueFunction: 'lower(:value)',
      source: {
        entityTypeId: 'd2da8cc7-9171-4d3e-8aba-4da286eb5f1c',
        columnName: 'statistical_code',
      },
    },
    {
      name: 'administrative_notes',
      sourceAlias: 'item',
      dataType: {
        dataType: 'arrayType',
        itemDataType: {
          dataType: 'stringType',
        },
      },
      isIdColumn: false,
      queryable: false,
      visibleByDefault: false,
      valueGetter: "(\
        SELECT\
          array_agg(elems.value::text)\
        FROM\
          jsonb_array_elements(:sourceAlias.jsonb->'administrativeNotes') AS elems\
      )",
      filterValueGetter: "(\
        SELECT\
          array_agg(lower(elems.value::text))\
        FROM\
          jsonb_array_elements(:sourceAlias.jsonb->'administrativeNotes') AS elems\
      )",
    },
    {
      name: 'effective_location_id',
      sourceAlias: 'item',
      dataType: {
        dataType: 'rangedUUIDType',
      },
      isIdColumn: false,
      queryable: true,
      visibleByDefault: false,
      valueGetter: ":sourceAlias.effectivelocationid",
    },
    {
      name: 'permanent_loan_type_id',
      sourceAlias: 'item',
      dataType: {
        dataType: 'rangedUUIDType',
      },
      isIdColumn: false,
      queryable: true,
      visibleByDefault: false,
      valueGetter: ":sourceAlias.jsonb->>'permanentLoanTypeId'",
    },
    {
      name: 'item_level_call_number_type_id',
      sourceAlias: 'item',
      dataType: {
        dataType: 'rangedUUIDType',
      },
      isIdColumn: false,
      queryable: true,
      visibleByDefault: false,
      valueGetter: ":sourceAlias.jsonb->>'itemLevelCallNumberTypeId'",
    },
    {
      name: 'effective_call_number',
      sourceAlias: 'item',
      dataType: {
        dataType: 'stringType',
      },
      queryable: true,
      visibleByDefault: true,
      valueGetter: "concat_ws(', '::text, NULLIF((:sourceAlias.jsonb -> 'effectiveCallNumberComponents'::text) ->> 'prefix'::text, ''::text), NULLIF((:sourceAlias.jsonb -> 'effectiveCallNumberComponents'::text) ->> 'callNumber'::text, ''::text), NULLIF((:sourceAlias.jsonb -> 'effectiveCallNumberComponents'::text) ->> 'suffix'::text, ''::text), NULLIF(:sourceAlias.jsonb ->> 'copyNumber'::text, ''::text))",
    },
    {
      name: 'effective_call_number_components_prefix',
      sourceAlias: 'item',
      dataType: {
        dataType: 'stringType',
      },
      isIdColumn: false,
      queryable: true,
      visibleByDefault: false,
      valueGetter: ":sourceAlias.jsonb->'effectiveCallNumberComponents'->>'prefix'",
    },
    {
      name: 'effective_call_number_components_suffix',
      sourceAlias: 'item',
      dataType: {
        dataType: 'stringType',
      },
      isIdColumn: false,
      queryable: true,
      visibleByDefault: false,
      valueGetter: ":sourceAlias.jsonb->'effectiveCallNumberComponents'->>'suffix'",
    },
    {
      name: 'effective_call_number_components_type_id',
      sourceAlias: 'item',
      dataType: {
        dataType: 'rangedUUIDType',
      },
      isIdColumn: false,
      queryable: true,
      visibleByDefault: false,
      valueGetter: ":sourceAlias.jsonb->'effectiveCallNumberComponents'->>'typeId'",
    },
    {
      name: 'effective_call_number_components_call_number',
      sourceAlias: 'item',
      dataType: {
        dataType: 'stringType',
      },
      isIdColumn: false,
      queryable: true,
      visibleByDefault: false,
      valueGetter: ":sourceAlias.jsonb->'effectiveCallNumberComponents'->>'callNumber'",
    },
    {
      name: 'enumeration',
      sourceAlias: 'item',
      dataType: {
        dataType: 'stringType',
      },
      isIdColumn: false,
      queryable: true,
      visibleByDefault: false,
      valueGetter: ":sourceAlias.jsonb->>'enumeration'",
    },
    {
      name: 'effective_shelving_order',
      sourceAlias: 'item',
      dataType: {
        dataType: 'stringType',
      },
      isIdColumn: false,
      queryable: true,
      visibleByDefault: false,
      valueGetter: ":sourceAlias.jsonb->>'effectiveShelvingOrder'",
    },
    {
      name: 'item_level_call_number',
      sourceAlias: 'item',
      dataType: {
        dataType: 'stringType',
      },
      isIdColumn: false,
      queryable: true,
      visibleByDefault: false,
      valueGetter: ":sourceAlias.jsonb->>'itemLevelCallNumber'",
    },
    {
      name: 'temporary_loan_type_id',
      sourceAlias: 'item',
      dataType: {
        dataType: 'rangedUUIDType',
      },
      isIdColumn: false,
      queryable: true,
      visibleByDefault: false,
      valueGetter: ":sourceAlias.temporarylocationid",
    },
    {
      name: 'permanent_location_id',
      sourceAlias: 'item',
      dataType: {
        dataType: 'rangedUUIDType',
      },
      isIdColumn: false,
      queryable: true,
      visibleByDefault: false,
      valueGetter: ":sourceAlias.permanentlocationid",
    },
    {
      name: 'last_check_in_date_time',
      sourceAlias: 'item',
      dataType: {
        dataType: 'dateType',
      },
      isIdColumn: false,
      queryable: true,
      visibleByDefault: false,
      valueGetter: ":sourceAlias.jsonb->'lastCheckIn'->>'dateTime'",
    },
    {
      name: 'last_check_in_staff_member_id',
      sourceAlias: 'item',
      dataType: {
        dataType: 'rangedUUIDType',
      },
      isIdColumn: false,
      queryable: true,
      visibleByDefault: false,
      valueGetter: ":sourceAlias.jsonb->'lastCheckIn'->>'staffMemberId'",
    },
    {
      name: 'last_check_in_service_point_id',
      sourceAlias: 'item',
      dataType: {
        dataType: 'rangedUUIDType',
      },
      isIdColumn: false,
      queryable: true,
      visibleByDefault: false,
      valueGetter: ":sourceAlias.jsonb->'lastCheckIn'->>'servicePointId'",
    },
    {
      name: 'in_transit_destination_service_point_id',
      sourceAlias: 'item',
      dataType: {
        dataType: 'rangedUUIDType',
      },
      isIdColumn: false,
      queryable: true,
      visibleByDefault: false,
      valueGetter: ":sourceAlias.jsonb->>'inTransitDestinationServicePointId'",
    },
    {
      name: 'item_level_call_number_prefix',
      sourceAlias: 'item',
      dataType: {
        dataType: 'stringType',
      },
      isIdColumn: false,
      queryable: true,
      visibleByDefault: false,
      valueGetter: ":sourceAlias.jsonb->>'itemLevelCallNumberPrefix'",
    },
    {
      name: 'number_of_pieces',
      sourceAlias: 'item',
      dataType: {
        dataType: 'stringType',
      },
      isIdColumn: false,
      queryable: true,
      visibleByDefault: false,
      valueGetter: ":sourceAlias.jsonb->>'numberOfPieces'",
    },
    {
      name: 'description_of_pieces',
      sourceAlias: 'item',
      dataType: {
        dataType: 'stringType',
      },
      isIdColumn: false,
      queryable: true,
      visibleByDefault: false,
      valueGetter: ":sourceAlias.jsonb->>'descriptionOfPieces'",
    },
    {
      name: 'tags_tag_list',
      sourceAlias: 'item',
      dataType: {
        dataType: 'arrayType',
        itemDataType: {
          dataType: 'stringType',
        },
      },
      isIdColumn: false,
      queryable: false,
      visibleByDefault: false,
      valueGetter: "(\
        SELECT\
          array_agg(elems.value::text)\
        FROM\
          jsonb_array_elements(:sourceAlias.jsonb->'tags'->'tagList') AS elems\
      )",
      filterValueGetter: "(\
        SELECT\
          array_agg(lower(elems.value::text))\
        FROM\
          jsonb_array_elements(:sourceAlias.jsonb->'tags'->'tagList') AS elems\
      )",
    },
    {
      name: 'item_level_call_number_suffix',
      sourceAlias: 'item',
      dataType: {
        dataType: 'stringType',
      },
      isIdColumn: false,
      queryable: true,
      visibleByDefault: false,
      valueGetter: ":sourceAlias.jsonb->>'itemLevelCallNumberSuffix'",
    },
    {
      name: 'chronology',
      sourceAlias: 'item',
      dataType: {
        dataType: 'stringType',
      },
      isIdColumn: false,
      queryable: true,
      visibleByDefault: false,
      valueGetter: ":sourceAlias.jsonb->>'chronology'",
    },
    {
      name: 'discovery_suppress',
      sourceAlias: 'item',
      dataType: {
        dataType: 'booleanType',
      },
      isIdColumn: false,
      queryable: true,
      visibleByDefault: false,
      valueGetter: ":sourceAlias.jsonb->>'discoverySuppress'",
      values: [
        {
          value: 'true',
          label: 'True',
        },
        {
          value: 'false',
          label: 'False',
        },
      ],
    },
    {
      name: 'accession_number',
      sourceAlias: 'item',
      dataType: {
        dataType: 'stringType',
      },
      isIdColumn: false,
      queryable: true,
      visibleByDefault: false,
      valueGetter: ":sourceAlias.jsonb->>'accessionNumber'",
    },
    {
      name: 'temporary_location_id',
      sourceAlias: 'item',
      dataType: {
        dataType: 'rangedUUIDType',
      },
      isIdColumn: false,
      queryable: true,
      visibleByDefault: false,
      valueGetter: ":sourceAlias.jsonb->>'temporaryLocationId'",
    },
    {
      name: 'item_damaged_status_id',
      sourceAlias: 'item',
      dataType: {
        dataType: 'stringType',
      },
      isIdColumn: false,
      queryable: true,
      visibleByDefault: false,
      valueGetter: ":sourceAlias.jsonb->>'itemDamagedStatusId'",
    },
    {
      name: 'number_of_missing_pieces',
      sourceAlias: 'item',
      dataType: {
        dataType: 'stringType',
      },
      isIdColumn: false,
      queryable: true,
      visibleByDefault: false,
      valueGetter: ":sourceAlias.jsonb->>'numberOfMissingPieces'",
    },
    {
      name: 'purchase_order_line_identifier',
      sourceAlias: 'item',
      dataType: {
        dataType: 'stringType',
      },
      isIdColumn: false,
      queryable: true,
      visibleByDefault: false,
      valueGetter: ":sourceAlias.jsonb->>'purchaseOrderLineIdentifier'",
    },
    {
      name: 'jsonb',
      sourceAlias: 'item',
      dataType: {
        dataType: 'stringType',
      },
      isIdColumn: false,
      queryable: false,
      visibleByDefault: false,
      valueGetter: ":sourceAlias.jsonb::text",
    }
  ],
}
