// NOTE: This auxiliary entity is tightly coupled to the main 'composite_order_invoice_analytics' entity and is not independently reusable.
// It exists solely to normalize the 'fundDistributions' array in invoice line records by transforming each element into its own row.
// The entity includes 'invoice_line' as a source and applies a CROSS JOIN LATERAL with jsonb_array_elements,
// allowing fund distribution elements to be extracted cleanly and used for joins (e.g., to fund and expense class).
// While this design means the auxiliary entity is dependent on the structure of the main entity and can't function on its own,
// it provides a clean and maintainable solution to the array normalization problem within the overall entity model.
{
  id: '4999bd5f-3898-4b44-b283-e37bc9261ad8',
  name: 'composite_invoice_line_fund_distribution',
  private: true,
  sources: [
    {
      type: 'entity-type',
      alias: 'invoice_line',
      targetId: '1373f063-8b86-48cc-832d-68b4d0dd44fc', // simple_invoice_line
      useIdColumns: true,
    },
    {
      type: 'db',
      alias: 'fund_distribution',
      target: 'jsonb_array_elements("invoice_line_fund_distribution.invoice_line.invoice_lines".jsonb -> \'fundDistributions\')',
      join: {
        type: 'LEFT JOIN LATERAL',
        joinTo: 'invoice_line.invoice_lines',
        condition: 'TRUE',
      }
    },
  ],
  columns: [
    {
      name: 'invoice_id',
      sourceAlias: 'invoice_line.invoice_lines',
      dataType: {
        dataType: 'rangedUUIDType',
      },
      isIdColumn: true,
      valueGetter: ":sourceAlias.invoiceid",
      filterValueGetter: "lower(:sourceAlias.invoiceid)",
      valueFunction: 'lower(:value)',
      joinsTo: [
        {
          targetId: '4d626ce1-1880-48d2-9d4c-81667fdc5dbb', // simple_invoice
          targetField: 'id',
          type: 'equality-simple',
          direction: 'left',
        },
      ],
    },
    {
      name: 'po_line_id',
      sourceAlias: 'invoice_line.invoice_lines',
      dataType: {
        dataType: 'rangedUUIDType',
      },
      isIdColumn: true,
      valueGetter: "(:sourceAlias.jsonb->>'poLineId')",
      filterValueGetter: "lower(:sourceAlias.jsonb->>'poLineId')",
      valueFunction: 'lower(:value)',
      joinsTo: [
        {
          targetId: '58148257-bfb0-4687-8c42-d2833d772f3e', // purchase_order_line
          targetField: 'id',
          type: 'equality-cast-uuid',
          direction: 'left',
        },
      ],
    },
    {
      name: 'fund_id',
      dataType: {
        dataType: 'rangedUUIDType',
      },
      isIdColumn: true,
      sourceAlias: 'fund_distribution',
      valueGetter: "(:sourceAlias.jsonb->>'fundId')",
      filterValueGetter: "lower(:sourceAlias.jsonb->>'fundId')",
      valueFunction: 'lower(:value)',
      joinsTo: [
        {
          targetId: '4c63c7f5-1a28-4394-b401-98c02c31492d', // simple_fund
          targetField: 'id',
          type: 'equality-cast-uuid',
          direction: 'left',
        },
      ],
    },
    {
      name: 'expense_class_id',
      dataType: {
        dataType: 'rangedUUIDType',
      },
      sourceAlias: 'fund_distribution',
      valueGetter: "(:sourceAlias.jsonb->>'expenseClassId')",
      filterValueGetter: "lower(:sourceAlias.jsonb->>'expenseClassId')",
      valueFunction: 'lower(:value)',
      joinsTo: [
        {
          targetId: '6e11cd39-a34e-4afc-90db-957dd45d139e', // simple_expense_class
          targetField: 'id',
          type: 'equality-cast-uuid',
          direction: 'left',
        },
      ],
    },
    {
      name: 'fund_total_value',
      dataType: {
        dataType: 'stringType',
      },
      valueGetter: "(\
        CASE WHEN (:fund_distribution.jsonb->>'distributionType') = 'percentage' \
          THEN (:fund_distribution.jsonb->>'value') || '%' \
          ELSE (:fund_distribution.jsonb->>'value') \
        END \
      )",
      queryable: false,
      visibleByDefault: true,
      essential: true,
    },
    {
      name: 'fund_total_amount',
      dataType: {
        dataType: 'stringType',
      },
      valueGetter: "(\
        CASE WHEN (:fund_distribution.jsonb->>'distributionType') = 'amount' \
          THEN (:fund_distribution.jsonb->>'value') \
          ELSE NULL \
        END \
      )",
      queryable: false,
      visibleByDefault: true,
      essential: true,
    },
  ],
}
