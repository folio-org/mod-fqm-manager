{
  id: 'abc777d3-2a45-43e6-82cb-71e8c96d13d2',
  name: 'composite_purchase_order_lines',
  private: false,
  sources: [
    {
      alias: 'pol',
      type: 'entity-type',
      id: '58148257-bfb0-4687-8c42-d2833d772f3e', // simple_purchase_order_line
      useIdColumns: true,
    },
    {
      alias: 'po',
      type: 'entity-type',
      id: '48de4796-11a2-44e9-abb7-01e84af87234', // simple_purchase_order
      join: {
        type: 'join',
        joinTo: 'pol.pol',
        condition: "(:that.jsonb ->>'purchaseOrderId')::uuid = :this.id",
      },
    },
    {
      alias: 'po_created_by_user',
      type: 'entity-type',
      id: 'bb058933-cd06-4539-bd3a-6f248ff98ee2', // simple_user_details,
      join: {
        type: 'left join',
        joinTo: 'po.po',
        condition: "(:that.jsonb ->'metadata'->> 'createdByUserId'::text)::uuid = :this.id"
      }
    },
    {
      alias: 'po_updated_by_user',
      type: 'entity-type',
      id: 'bb058933-cd06-4539-bd3a-6f248ff98ee2', // simple_user_details
      join: {
        type: 'left join',
        joinTo: 'po.po',
        condition: "(:that.jsonb ->'metadata'->> 'updatedByUserId'::text)::uuid = :this.id",
      },
    },
    {
      alias: 'pol_created_by_user',
      type: 'entity-type',
      id: 'bb058933-cd06-4539-bd3a-6f248ff98ee2', // simple_user_details
      join: {
        type: 'left join',
        joinTo: 'pol.pol',
        condition: "(:that.jsonb ->'metadata'->> 'createdByUserId'::text)::uuid = :this.id"
      }
    },
    {
      alias: 'pol_updated_by_user',
      type: 'entity-type',
      id: 'bb058933-cd06-4539-bd3a-6f248ff98ee2', // simple_user_details
      join: {
        joinTo: 'pol.pol',
        type: 'left join',
        condition: "(:that.jsonb ->'metadata'->> 'updatedByUserId'::text)::uuid = :this.id"
      }
    },
    {
      alias: 'vendor_organization',
      type: 'entity-type',
      id: 'b5ffa2e9-8080-471a-8003-a8c5a1274503', // simple_organization
      join: {
        type: 'left join',
        condition: "(:that.jsonb ->> 'vendor')::uuid = :this.id",
        joinTo: 'po.po',
      },
    },
    {
      alias: 'assigned_to_user',
      type: 'entity-type',
      id: 'bb058933-cd06-4539-bd3a-6f248ff98ee2', // simple_user_details
      join: {
        type: 'left join',
        joinTo: 'po.po',
        condition: "(:that.jsonb ->> 'assignedTo')::uuid = :this.id",
      },
    },
    {
      alias: 'rates',
      type: 'entity-type',
      id: '770a383e-c6cb-412b-abc3-6fa3c8a8795c', // simple_user_details
      join: {
        type: 'left join',
        joinTo: 'pol.pol',
        condition: ":this.currency = :that.jsonb -> 'cost' ->> 'currency'",
      },
    },
  ],
  requiredPermissions: [
    // Technically, these 2 permissions get inherited from the exchange rate source, but since the table is used directly here, too, the permissions are included here
    // If we can remove the explicit reference to the currency_exchange_rates table, then we can remove these from this entity type and just inherit them
    "finance.exchange-rate.item.get",
    "configuration.entries.collection.get", // This isn't directly used here, but this is required to populate currency_exchange_rates; users without this permission can't access the configured system currency, so we shouldn't expose it here
  ],
  columns: [
    {
      name: 'pol_exchange_rate',
      sourceAlias: 'pol.pol',
      dataType: {
        dataType: 'numberType',
      },
      queryable: true,
      visibleByDefault: false,
      valueGetter: "CASE WHEN (:sourceAlias.jsonb -> 'cost' ->> 'exchangeRate') IS NOT NULL \
        THEN (:sourceAlias.jsonb -> 'cost' -> 'exchangeRate')::float \
        ELSE (select exchange_rate from currency_exchange_rates where currency_exchange_rates.currency = :sourceAlias.jsonb -> 'cost' ->> 'currency') \
      END",
      valueFunction: '(:value)::float',
    },
  ],
  defaultSort: [
    {
      columnName: 'id',
      direction: 'ASC',
    },
  ]
}
