{
  id: '7a7860cd-e939-504f-b51f-ed3e1e6b12b9',
  name: 'drv_organization_contacts',
  private: false,
  fromClause: 'src_organizations AS org',
  columns: [
    {
      name: 'id',
      dataType: {
        dataType: 'rangedUUIDType',
      },
      isIdColumn: true,
      queryable: true,
      visibleByDefault: true,
      valueGetter: 'org.id',
    },
    {
      name: 'last_updated',
      dataType: {
        dataType: 'dateType',
      },
      queryable: true,
      visibleByDefault: false,
      valueGetter: "org.jsonb->'metadata'->>'updatedDate'",
    },
    {
      name: 'name',
      dataType: {
        dataType: 'stringType',
      },
      queryable: true,
      visibleByDefault: true,
      valueGetter: "org.jsonb->>'name'",
      filterValueGetter: "lower(fs09000000_mod_organizations_storage.f_unaccent(org.jsonb ->> 'name'::text))",
      valueFunction: 'lower(fs09000000_mod_organizations_storage.f_unaccent(:value))',
    },
    {
      name: 'code',
      dataType: {
        dataType: 'stringType',
      },
      queryable: true,
      visibleByDefault: true,
      valueGetter: "org.jsonb->>'code'",
      filterValueGetter: "lower(fs09000000_mod_organizations_storage.f_unaccent(org.jsonb ->> 'code'::text))",
      valueFunction: 'lower(fs09000000_mod_organizations_storage.f_unaccent(:value))',
    },
    {
      name: 'accounting_code',
      dataType: {
        dataType: 'stringType',
      },
      queryable: true,
      visibleByDefault: false,
      valueGetter: "org.jsonb->>'erpCode'",
      filterValueGetter: "lower(fs09000000_mod_organizations_storage.f_unaccent(org.jsonb ->> 'erpCode'::text))",
      valueFunction: 'lower(fs09000000_mod_organizations_storage.f_unaccent(:value))',
    },
    {
      name: 'organization_status',
      dataType: {
        dataType: 'stringType',
      },
      queryable: true,
      visibleByDefault: true,
      valueGetter: "org.jsonb->>'status'",
      filterValueGetter: "lower(fs09000000_mod_organizations_storage.f_unaccent(org.jsonb ->> 'status'::text))",
      valueFunction: 'lower(fs09000000_mod_organizations_storage.f_unaccent(:value))',
      values: [
        {
          label: 'Active',
          value: 'active',
        },
        {
          label: 'Inactive',
          value: 'inactive',
        },
        {
          label: 'Pending',
          value: 'pending',
        },
      ],
    },
    {
      name: 'organization_type_ids',
      dataType: {
        dataType: 'arrayType',
        itemDataType: {
          dataType: 'rangedUUIDType',
        },
      },
      queryable: false,
      visibleByDefault: false,
      valueGetter: "( SELECT array_agg(record.value::text) FILTER (WHERE (record.value::text) IS NOT NULL) AS array_agg FROM jsonb_array_elements_text(org.jsonb->'organizationTypes'::text) record(value))",
    },
    {
      name: 'organization_type_name',
      dataType: {
        dataType: 'arrayType',
        itemDataType: {
          dataType: 'stringType',
        },
      },
      idColumnName: 'organization_type_ids',
      queryable: false,
      visibleByDefault: false,
      valueGetter: "( SELECT array_agg(a.jsonb ->> 'name'::text) FILTER (WHERE (a.jsonb ->> 'name'::text) IS NOT NULL) AS array_agg FROM jsonb_array_elements_text((org.jsonb -> 'organizationTypes'::text)) record(value) JOIN src_organization_types a ON (record.value::text) = a.id::text)",
      source: {
        entityTypeId: '6b335e41-2654-4e2a-9b4e-c6930b330ccc',
        columnName: 'organization_types_name',
      },
    },
    {
      name: 'description',
      dataType: {
        dataType: 'stringType',
      },
      queryable: true,
      visibleByDefault: false,
      valueGetter: "org.jsonb->>'description'",
      filterValueGetter: "lower(fs09000000_mod_organizations_storage.f_unaccent(org.jsonb ->> 'description'::text))",
      valueFunction: 'lower(fs09000000_mod_organizations_storage.f_unaccent(:value))',
    },
    {
      name: 'alias',
      dataType: {
        dataType: 'arrayType',
        itemDataType: {
          dataType: 'objectType',
          properties: [
            {
              name: 'value',
              property: 'value',
              dataType: {
                dataType: 'stringType',
              },
              queryable: false,
              filterValueGetter: "( SELECT array_agg(lower(elems.value ->> 'value')) FROM jsonb_array_elements(org.jsonb -> 'aliases') AS elems)",
              valueFunction: 'lower(:value)',
            },
            {
              name: 'description',
              property: 'description',
              dataType: {
                dataType: 'stringType',
              },
              queryable: false,
              filterValueGetter: "( SELECT array_agg(lower(elems.value ->> 'description')) FROM jsonb_array_elements(org.jsonb -> 'aliases') AS elems)",
              valueFunction: 'lower(:value)',
            },
          ],
        },
      },
      visibleByDefault: false,
      valueGetter: "org.jsonb ->> 'aliases'",
    },
    {
      name: 'address',
      dataType: {
        dataType: 'arrayType',
        itemDataType: {
          dataType: 'objectType',
          properties: [
            {
              name: 'address_line_1',
              property: 'addressLine1',
              dataType: {
                dataType: 'stringType',
              },
              queryable: false,
              filterValueGetter: "( SELECT array_agg(lower(elems.value ->> 'addressLine1')) FROM jsonb_array_elements(org.jsonb -> 'addresses') AS elems)",
              valueFunction: 'lower(:value)',
            },
            {
              name: 'address_line_2',
              property: 'addressLine2',
              dataType: {
                dataType: 'stringType',
              },
              queryable: false,
              filterValueGetter: "( SELECT array_agg(lower(elems.value ->> 'addressLine2')) FROM jsonb_array_elements(org.jsonb -> 'addresses') AS elems)",
              valueFunction: 'lower(:value)',
            },
            {
              name: 'city',
              property: 'city',
              dataType: {
                dataType: 'stringType',
              },
              queryable: false,
              filterValueGetter: "( SELECT array_agg(lower(elems.value ->> 'city')) FROM jsonb_array_elements(org.jsonb -> 'addresses') AS elems)",
              valueFunction: 'lower(:value)',
            },
            {
              name: 'state_region',
              property: 'stateRegion',
              dataType: {
                dataType: 'stringType',
              },
              queryable: false,
              filterValueGetter: "( SELECT array_agg(lower(elems.value ->> 'stateRegion')) FROM jsonb_array_elements(org.jsonb -> 'addresses') AS elems)",
              valueFunction: 'lower(:value)',
            },
            {
              name: 'postal_code',
              property: 'zipCode',
              dataType: {
                dataType: 'stringType',
              },
              queryable: false,
              filterValueGetter: "( SELECT array_agg(lower(elems.value ->> 'zipCode')) FROM jsonb_array_elements(org.jsonb -> 'addresses') AS elems)",
              valueFunction: 'lower(:value)',
            },
            {
              name: 'country',
              property: 'country',
              dataType: {
                dataType: 'stringType',
              },
              queryable: false,
              filterValueGetter: "( SELECT array_agg(lower(elems.value ->> 'country')) FROM jsonb_array_elements(org.jsonb -> 'addresses') AS elems)",
              valueFunction: 'lower(:value)',
            },
            {
              name: 'category_ids',
              property: 'categories',
              dataType: {
                dataType: 'arrayType',
                itemDataType: {
                  dataType: 'rangedUUIDType',
                },
              },
              queryable: false,
              filterValueGetter: "( SELECT array_agg(lower(elems#>>'{}')) FROM jsonb_array_elements(org.jsonb->'addresses') AS address_obj, jsonb_array_elements(address_obj->'categories') as elems )",
            },
            {
              name: 'category_names',
              property: 'categoryNames',
              dataType: {
                dataType: 'arrayType',
                itemDataType: {
                  dataType: 'stringType',
                },
              },
              queryable: false,
              filterValueGetter: "( SELECT array_agg(lower(cats.jsonb->>'value')) FROM jsonb_array_elements(org.jsonb->'addresses') as address, jsonb_array_elements(address->'categories') as category_id JOIN src_organization_categories cats ON cats.id = (category_id#>>'{}')::uuid )",
            },
          ],
        },
      },
      visibleByDefault: false,
      valueGetter: "( SELECT jsonb_agg(address || jsonb_build_object('categoryNames', COALESCE(( SELECT array_agg(cats.jsonb->>'value') FROM jsonb_array_elements(address->'categories') as category_id JOIN src_organization_categories cats on cats.id = (category_id#>>'{}')::uuid ), array []::text[])))::text FROM jsonb_array_elements(org.jsonb->'addresses') as address)",
    },
    {
      name: 'phone_number',
      dataType: {
        dataType: 'arrayType',
        itemDataType: {
          dataType: 'objectType',
          properties: [
            {
              name: 'phone_number',
              property: 'phoneNumber',
              dataType: {
                dataType: 'stringType',
              },
              queryable: false,
              filterValueGetter: "( SELECT array_agg(lower(elems.value ->> 'phoneNumber')) FROM jsonb_array_elements(org.jsonb -> 'phoneNumbers') AS elems)",
              valueFunction: 'lower(:value)',
            },
            {
              name: 'type',
              property: 'type',
              dataType: {
                dataType: 'stringType',
              },
              queryable: false,
              filterValueGetter: "( SELECT array_agg(lower(elems.value ->> 'type')) FROM jsonb_array_elements(org.jsonb -> 'phoneNumbers') AS elems)",
              valueFunction: 'lower(:value)',
            },
            {
              name: 'category_ids',
              property: 'categories',
              dataType: {
                dataType: 'arrayType',
                itemDataType: {
                  dataType: 'rangedUUIDType',
                },
              },
              queryable: false,
              filterValueGetter: "( SELECT array_agg(lower(elems#>>'{}')) FROM jsonb_array_elements(org.jsonb->'phoneNumbers') AS phone_obj, jsonb_array_elements(phone_obj->'categories') as elems )",
            },
            {
              name: 'category_names',
              property: 'categoryNames',
              dataType: {
                dataType: 'arrayType',
                itemDataType: {
                  dataType: 'stringType',
                },
              },
              queryable: false,
              filterValueGetter: "( SELECT array_agg(lower(cats.jsonb->>'value')) FROM jsonb_array_elements(org.jsonb->'phoneNumbers') as phone, jsonb_array_elements(phone->'categories') as category_id JOIN src_organization_categories cats ON cats.id = (category_id#>>'{}')::uuid )",
            },
          ],
        },
      },
      visibleByDefault: false,
      valueGetter: "( SELECT jsonb_agg(phone || jsonb_build_object('categoryNames', COALESCE(( SELECT array_agg(cats.jsonb->>'value') FROM jsonb_array_elements(phone->'categories') as category_id JOIN src_organization_categories cats on cats.id = (category_id#>>'{}')::uuid ),  array []::text[])))::text FROM jsonb_array_elements(org.jsonb->'phoneNumbers') as phone)",
    },
    {
      name: 'email',
      dataType: {
        dataType: 'arrayType',
        itemDataType: {
          dataType: 'objectType',
          properties: [
            {
              name: 'email',
              property: 'value',
              dataType: {
                dataType: 'stringType',
              },
              queryable: false,
              filterValueGetter: "( SELECT array_agg(lower(elems.value ->> 'value')) FROM jsonb_array_elements(org.jsonb -> 'emails') AS elems)",
              valueFunction: 'lower(:value)',
            },
            {
              name: 'description',
              property: 'description',
              dataType: {
                dataType: 'stringType',
              },
              queryable: false,
              filterValueGetter: "( SELECT array_agg(lower(elems.value ->> 'description')) FROM jsonb_array_elements(org.jsonb -> 'emails') AS elems)",
              valueFunction: 'lower(:value)',
            },
            {
              name: 'category_ids',
              property: 'categories',
              dataType: {
                dataType: 'arrayType',
                itemDataType: {
                  dataType: 'rangedUUIDType',
                },
              },
              queryable: false,
              filterValueGetter: "( SELECT array_agg(lower(elems#>>'{}')) FROM jsonb_array_elements(org.jsonb->'emails') AS email_obj, jsonb_array_elements(email_obj->'categories') as elems )",
            },
            {
              name: 'category_names',
              property: 'categoriesNames',
              dataType: {
                dataType: 'arrayType',
                itemDataType: {
                  dataType: 'stringType',
                },
              },
              queryable: false,
              filterValueGetter: "( SELECT array_agg(lower(cats.jsonb->>'value')) FROM jsonb_array_elements(org.jsonb->'emails') as email, jsonb_array_elements(email->'categories') as category_id JOIN src_organization_categories cats ON cats.id = (category_id#>>'{}')::uuid )",
            },
          ],
        },
      },
      visibleByDefault: false,
      valueGetter: "( SELECT jsonb_agg(email || jsonb_build_object('categoryNames', COALESCE(( SELECT array_agg(cats.jsonb->>'value') FROM jsonb_array_elements(email->'categories') as category_id JOIN src_organization_categories cats on cats.id = (category_id#>>'{}')::uuid ),  array []::text[])))::text FROM jsonb_array_elements(org.jsonb->'emails') as email)",
    },
    {
      name: 'url',
      dataType: {
        dataType: 'arrayType',
        itemDataType: {
          dataType: 'objectType',
          properties: [
            {
              name: 'url',
              property: 'value',
              dataType: {
                dataType: 'stringType',
              },
              queryable: false,
              filterValueGetter: "( SELECT array_agg(lower(elems.value ->> 'value')) FROM jsonb_array_elements(org.jsonb -> 'urls') AS elems)",
              valueFunction: 'lower(:value)',
            },
            {
              name: 'description',
              property: 'description',
              dataType: {
                dataType: 'stringType',
              },
              queryable: false,
              filterValueGetter: "( SELECT array_agg(lower(elems.value ->> 'description')) FROM jsonb_array_elements(org.jsonb -> 'urls') AS elems)",
              valueFunction: 'lower(:value)',
            },
            {
              name: 'category_ids',
              property: 'categories',
              dataType: {
                dataType: 'arrayType',
                itemDataType: {
                  dataType: 'rangedUUIDType',
                },
              },
              queryable: false,
              filterValueGetter: "( SELECT array_agg(lower(elems#>>'{}')) FROM jsonb_array_elements(org.jsonb->'urls') AS url_obj, jsonb_array_elements(url_obj->'categories') as elems )",
            },
            {
              name: 'category_names',
              property: 'categoriesNames',
              dataType: {
                dataType: 'arrayType',
                itemDataType: {
                  dataType: 'stringType',
                },
              },
              queryable: false,
              filterValueGetter: "( SELECT array_agg(lower(cats.jsonb->>'value')) FROM jsonb_array_elements(org.jsonb->'urls') as url, jsonb_array_elements(url->'categories') as category_id JOIN src_organization_categories cats ON cats.id = (category_id#>>'{}')::uuid )",
            },
          ],
        },
      },
      visibleByDefault: false,
      valueGetter: "( SELECT jsonb_agg(url || jsonb_build_object('categoryNames', COALESCE(( SELECT array_agg(cats.jsonb->>'value') FROM jsonb_array_elements(url->'categories') as category_id JOIN src_organization_categories cats on cats.id = (category_id#>>'{}')::uuid ), array []::text[])))::text FROM jsonb_array_elements(org.jsonb->'urls') as url)",
    },
    {
      name: 'acquisition_unit_id',
      dataType: {
        dataType: 'arrayType',
        itemDataType: {
          dataType: 'rangedUUIDType',
        },
      },
      queryable: false,
      visibleByDefault: false,
      valueGetter: "( SELECT array_agg(acq_id.value::text) FILTER (WHERE (acq_id.value::text) IS NOT NULL) AS array_agg FROM jsonb_array_elements_text(org.jsonb -> 'acqUnitIds'::text) acq_id(value))",
      filterValueGetter: "( SELECT array_agg(lower(acq_id.value::text)) FILTER (WHERE (acq_id.value::text) IS NOT NULL) AS array_agg FROM jsonb_array_elements_text(org.jsonb -> 'acqUnitIds'::text) acq_id(value))",
      valueFunction: 'lower(:value)',
    },
    {
      name: 'acquisition_unit_name',
      dataType: {
        dataType: 'arrayType',
        itemDataType: {
          dataType: 'stringType',
        },
      },
      idColumnName: 'acquisition_unit_id',
      queryable: false,
      visibleByDefault: false,
      valueGetter: "( SELECT array_agg(acq_unit.jsonb ->> 'name'::text) FILTER (WHERE (acq_unit.jsonb ->> 'name'::text) IS NOT NULL) AS array_agg FROM jsonb_array_elements_text((org.jsonb -> 'acqUnitIds'::text)) record(value) JOIN src_acquisitions_unit acq_unit ON lower(record.value::text) = acq_unit.id::text)",
      filterValueGetter: "( SELECT array_agg(lower(acq_unit.jsonb ->> 'name'::text)) FILTER (WHERE (acq_unit.jsonb ->> 'name'::text) IS NOT NULL) AS array_agg FROM jsonb_array_elements_text((org.jsonb -> 'acqUnitIds'::text)) record(value) JOIN src_acquisitions_unit acq_unit ON (record.value::text) = acq_unit.id::text)",
      valueFunction: 'lower(:value)',
      source: {
        entityTypeId: 'cc51f042-03e2-43d1-b1d6-11aa6a39bc78',
        columnName: 'acquisitions_name',
      },
    },
  ],
  defaultSort: [
    {
      columnName: 'id',
      direction: 'ASC',
    },
  ],
}
