{
  id: 'bb058933-cd06-4539-bd3a-6f248ff98ee2',
  name: 'drv_simple_user_details',
  private: false,
  fromClause: 'src_users_users',
  columns: [
    {
      name: 'user_active',
      dataType: {
        dataType: 'booleanType',
      },
      queryable: true,
      visibleByDefault: true,
      valueGetter: "src_users_users.jsonb ->> 'active'",
      filterValueGetter: "lower(${tenant_id}_mod_users.f_unaccent(src_users_users.jsonb ->> 'active'::text))",
      valueFunction: 'lower(${tenant_id}_mod_users.f_unaccent(:value))'
    },
    {
      name: 'user_address_ids',
      dataType: {
        dataType: 'arrayType',
        itemDataType: {
          dataType: 'rangedUUIDType',
        },
      },
      queryable: false,
      visibleByDefault: false,
      valueGetter: "( SELECT array_agg(record.value ->> 'addressTypeId'::text) FILTER (WHERE (record.value ->> 'addressTypeId'::text) IS NOT NULL) AS array_agg FROM jsonb_array_elements((src_users_users.jsonb -> 'personal'::text) -> 'addresses'::text) record(value))",
      filterValueGetter: "( SELECT array_agg(lower(record.value ->> 'addressTypeId'::text)) FILTER (WHERE (record.value ->> 'addressTypeId'::text) IS NOT NULL) AS array_agg FROM jsonb_array_elements((src_users_users.jsonb -> 'personal'::text) -> 'addresses'::text) record(value))",
      valueFunction: 'lower(:value)',
    },
    {
      name: 'user_address_line1',
      dataType: {
        dataType: 'arrayType',
        itemDataType: {
          dataType: 'stringType',
        },
      },
      queryable: false,
      visibleByDefault: false,
      valueGetter: "( SELECT array_agg(record.value ->> 'addressLine1'::text) FILTER (WHERE (record.value ->> 'addressLine1'::text) IS NOT NULL) AS array_agg FROM jsonb_array_elements((src_users_users.jsonb -> 'personal'::text) -> 'addresses'::text) record(value))",
      filterValueGetter: "( SELECT array_agg(lower(record.value ->> 'addressLine1'::text)) FILTER (WHERE (record.value ->> 'addressLine1'::text) IS NOT NULL) AS array_agg FROM jsonb_array_elements((src_users_users.jsonb -> 'personal'::text) -> 'addresses'::text) record(value))",
      valueFunction: 'lower(:value)',
    },
    {
      name: 'user_address_line2',
      dataType: {
        dataType: 'arrayType',
        itemDataType: {
          dataType: 'stringType',
        },
      },
      queryable: false,
      visibleByDefault: false,
      valueGetter: "( SELECT array_agg(record.value ->> 'addressLine2'::text) FILTER (WHERE (record.value ->> 'addressLine2'::text) IS NOT NULL) AS array_agg FROM jsonb_array_elements((src_users_users.jsonb -> 'personal'::text) -> 'addresses'::text) record(value))",
      filterValueGetter: "( SELECT array_agg(lower(record.value ->> 'addressLine2'::text)) FILTER (WHERE (record.value ->> 'addressLine2'::text) IS NOT NULL) AS array_agg FROM jsonb_array_elements((src_users_users.jsonb -> 'personal'::text) -> 'addresses'::text) record(value))",
      valueFunction: 'lower(:value)',
    },
    {
      name: 'user_address_type_names',
      dataType: {
        dataType: 'arrayType',
        itemDataType: {
          dataType: 'stringType',
        },
      },
      idColumnName: 'user_address_ids',
      queryable: false,
      visibleByDefault: false,
      valueGetter: "( SELECT array_agg(a.jsonb ->> 'addressType'::text) FILTER (WHERE (a.jsonb ->> 'addressType'::text) IS NOT NULL) AS array_agg FROM jsonb_array_elements((src_users_users.jsonb -> 'personal'::text) -> 'addresses'::text) record(value) JOIN src_users_addresstype a ON (record.value ->> 'addressTypeId'::text) = a.id::text)",
      filterValueGetter: "( SELECT array_agg(lower(a.jsonb ->> 'addressType'::text)) FILTER (WHERE (a.jsonb ->> 'addressType'::text) IS NOT NULL) AS array_agg FROM jsonb_array_elements((src_users_users.jsonb -> 'personal'::text) -> 'addresses'::text) record(value) JOIN src_users_addresstype a ON (record.value ->> 'addressTypeId'::text) = a.id::text)",
      valueFunction: 'lower(:value)',
      source: {
        entityTypeId: '0069cf6f-2833-46db-8a51-8934769b8289',
        columnName: 'user_address_type_names',
      },
      valueSourceApi: {
        path: 'addresstypes',
        valueJsonPath: '$.addressTypes.*.id',
        labelJsonPath: '$.addressTypes.*.addressType',
      },
    },
    {
      name: 'user_barcode',
      dataType: {
        dataType: 'stringType',
      },
      queryable: true,
      visibleByDefault: true,
      valueGetter: "src_users_users.jsonb ->> 'barcode'",
      filterValueGetter: "lower(${tenant_id}_mod_users.f_unaccent(src_users_users.jsonb ->> 'barcode'::text))",
      valueFunction: 'lower(${tenant_id}_mod_users.f_unaccent(:value))',
    },
    {
      name: 'user_cities',
      dataType: {
        dataType: 'arrayType',
        itemDataType: {
          dataType: 'stringType',
        },
      },
      queryable: false,
      visibleByDefault: false,
      valueGetter: "( SELECT array_agg(record.value ->> 'city'::text) FILTER (WHERE (record.value ->> 'city'::text) IS NOT NULL) AS array_agg FROM jsonb_array_elements((src_users_users.jsonb -> 'personal'::text) -> 'addresses'::text) record(value))",
      filterValueGetter: "( SELECT array_agg(lower(record.value ->> 'city'::text)) FILTER (WHERE (record.value ->> 'city'::text) IS NOT NULL) AS array_agg FROM jsonb_array_elements((src_users_users.jsonb -> 'personal'::text) -> 'addresses'::text) record(value))",
      valueFunction: 'lower(:value)',
    },
    {
      name: 'user_country_ids',
      dataType: {
        dataType: 'arrayType',
        itemDataType: {
          dataType: 'stringType',
        },
      },
      queryable: false,
      visibleByDefault: false,
      valueGetter: "( SELECT array_agg(record.value ->> 'countryId'::text) FILTER (WHERE (record.value ->> 'countryId'::text) IS NOT NULL) AS array_agg FROM jsonb_array_elements((src_users_users.jsonb -> 'personal'::text) -> 'addresses'::text) record(value))",
      filterValueGetter: "( SELECT array_agg(lower(record.value ->> 'countryId'::text)) FILTER (WHERE (record.value ->> 'countryId'::text) IS NOT NULL) AS array_agg FROM jsonb_array_elements((src_users_users.jsonb -> 'personal'::text) -> 'addresses'::text) record(value))",
      valueFunction: 'lower(:value)',
    },
    {
      name: 'user_created_date',
      dataType: {
        dataType: 'dateType',
      },
      queryable: true,
      visibleByDefault: false,
      valueGetter: "src_users_users.jsonb -> 'metadata' ->> 'createdDate'",
    },
    {
      name: 'user_date_of_birth',
      dataType: {
        dataType: 'dateType',
      },
      queryable: true,
      visibleByDefault: false,
      valueGetter: "src_users_users.jsonb -> 'personal' ->> 'dateOfBirth'",
    },
    {
      name: 'user_department_ids',
      dataType: {
        dataType: 'arrayType',
        itemDataType: {
          dataType: 'rangedUUIDType',
        },
      },
      queryable: false,
      visibleByDefault: false,
      valueGetter: "( SELECT array_agg(record.value::text) FILTER (WHERE (record.value::text) IS NOT NULL) AS array_agg FROM jsonb_array_elements_text(src_users_users.jsonb -> 'departments'::text) record(value))",
      filterValueGetter: "( SELECT array_agg(lower(record.value::text)) FILTER (WHERE (record.value::text) IS NOT NULL) AS array_agg FROM jsonb_array_elements_text(src_users_users.jsonb -> 'departments'::text) record(value))",
      valueFunction: 'lower(:value)',
    },
    {
      name: 'user_email',
      dataType: {
        dataType: 'stringType',
      },
      queryable: true,
      visibleByDefault: false,
      valueGetter: "src_users_users.jsonb -> 'personal' ->> 'email'",
      filterValueGetter: "lower(${tenant_id}_mod_users.f_unaccent((src_users_users.jsonb -> 'personal'::text) ->> 'email'::text))",
      valueFunction: 'lower(${tenant_id}_mod_users.f_unaccent(:value))',
    },
    {
      name: 'user_enrollment_date',
      dataType: {
        dataType: 'dateType',
      },
      queryable: true,
      visibleByDefault: false,
      valueGetter: "src_users_users.jsonb ->> 'enrollmentDate'",
    },
    {
      name: 'user_expiration_date',
      dataType: {
        dataType: 'dateType',
      },
      queryable: true,
      visibleByDefault: false,
      valueGetter: "src_users_users.jsonb ->> 'expirationDate'",
      filterValueGetter: '"left"(src_users_users.jsonb ->> \'expirationDate\'::text, 600)',
      valueFunction: '"left"(:value, 600)',
    },
    {
      name: 'user_external_system_id',
      dataType: {
        dataType: 'stringType',
      },
      queryable: true,
      visibleByDefault: false,
      valueGetter: "src_users_users.jsonb ->> 'externalSystemId'",
      filterValueGetter: "lower(${tenant_id}_mod_users.f_unaccent(src_users_users.jsonb ->> 'externalSystemId'::text))",
      valueFunction: 'lower(${tenant_id}_mod_users.f_unaccent(:value))',
    },
    {
      name: 'user_first_name',
      dataType: {
        dataType: 'stringType',
      },
      queryable: true,
      visibleByDefault: true,
      valueGetter: "src_users_users.jsonb -> 'personal' ->> 'firstName'",
      filterValueGetter: "\"left\"(lower(${tenant_id}_mod_users.f_unaccent((src_users_users.jsonb -> 'personal'::text) ->> 'firstName'::text)), 600)",
      valueFunction: '"left"(lower(${tenant_id}_mod_users.f_unaccent(:value)), 600)',
    },
    {
      name: 'id',
      dataType: {
        dataType: 'rangedUUIDType',
      },
      isIdColumn: true,
      queryable: true,
      visibleByDefault: true,
      valueGetter: 'src_users_users.id',
    },
    {
      name: 'user_last_name',
      dataType: {
        dataType: 'stringType',
      },
      queryable: true,
      visibleByDefault: true,
      valueGetter: "src_users_users.jsonb -> 'personal' ->> 'lastName'",
      filterValueGetter: "\"left\"(lower(${tenant_id}_mod_users.f_unaccent((src_users_users.jsonb -> 'personal'::text) ->> 'lastName'::text)), 600)",
      valueFunction: '"left"(lower(${tenant_id}_mod_users.f_unaccent(:value)), 600)',
    },
    {
      name: 'user_middle_name',
      dataType: {
        dataType: 'stringType',
      },
      queryable: true,
      visibleByDefault: false,
      valueGetter: "src_users_users.jsonb -> 'personal' ->> 'middleName'",
    },
    {
      name: 'user_mobile_phone',
      dataType: {
        dataType: 'stringType',
      },
      queryable: true,
      visibleByDefault: false,
      valueGetter: "src_users_users.jsonb -> 'personal' ->> 'mobilePhone'",
    },
    {
      name: 'user_patron_group_id',
      dataType: {
        dataType: 'rangedUUIDType',
      },
      queryable: true,
      visibleByDefault: false,
      valueGetter: 'src_users_groups.id',
    },
    {
      name: 'user_phone',
      dataType: {
        dataType: 'stringType',
      },
      queryable: true,
      visibleByDefault: true,
      valueGetter: "src_users_users.jsonb -> 'personal' ->> 'phone'",
    },
    {
      name: 'user_postal_codes',
      dataType: {
        dataType: 'arrayType',
        itemDataType: {
          dataType: 'stringType',
        },
      },
      queryable: false,
      visibleByDefault: false,
      valueGetter: "( SELECT array_agg(record.value ->> 'postalCode'::text) FILTER (WHERE (record.value ->> 'postalCode'::text) IS NOT NULL) AS array_agg FROM jsonb_array_elements((src_users_users.jsonb -> 'personal'::text) -> 'addresses'::text) record(value))",
      filterValueGetter: "( SELECT array_agg(lower(record.value ->> 'postalCode'::text)) FILTER (WHERE (record.value ->> 'postalCode'::text) IS NOT NULL) AS array_agg FROM jsonb_array_elements((src_users_users.jsonb -> 'personal'::text) -> 'addresses'::text) record(value))",
      valueFunction: 'lower(:value)',
    },
    {
      name: 'user_preferred_contact_type_id',
      dataType: {
        dataType: 'stringType',
      },
      queryable: true,
      visibleByDefault: false,
      valueGetter: "src_users_users.jsonb -> 'personal'->> 'preferredContactTypeId'",
    },
    {
      name: 'profile_picture_link',
      dataType: {
        dataType: 'stringType',
      },
      queryable: true,
      visibleByDefault: false,
      valueGetter: "src_users_users.jsonb -> 'personal'->> 'profilePictureLink'",
    },
    {
      name: 'user_preferred_first_name',
      dataType: {
        dataType: 'stringType',
      },
      queryable: true,
      visibleByDefault: true,
      valueGetter: "src_users_users.jsonb -> 'personal' ->> 'preferredFirstName'",
      filterValueGetter: "${tenant_id}_mod_users.f_unaccent((src_users_users.jsonb -> 'personal'::text) ->> 'preferredFirstName'::text)",
      valueFunction: '${tenant_id}_mod_users.f_unaccent(:value)',
    },
    {
      name: 'user_primary_address',
      dataType: {
        dataType: 'booleanType',
      },
      values: [
        {
          value: 'true',
          label: 'True',
        },
        {
          value: 'false',
          label: 'False',
        },
      ],
      queryable: true,
      visibleByDefault: false,
      valueGetter: "( SELECT array_agg(record.value ->> 'primaryAddress'::text) FILTER (WHERE (record.value ->> 'primaryAddress'::text) IS NOT NULL) AS array_agg FROM jsonb_array_elements((src_users_users.jsonb -> 'personal'::text) -> 'addresses'::text) record(value))",
      filterValueGetter: "( SELECT array_agg(lower(record.value ->> 'primaryAddress'::text)) FILTER (WHERE (record.value ->> 'primaryAddress'::text) IS NOT NULL) AS array_agg FROM jsonb_array_elements((src_users_users.jsonb -> 'personal'::text) -> 'addresses'::text) record(value))",
      valueFunction: 'lower(:value)'
    },
    {
      name: 'user_regions',
      dataType: {
        dataType: 'arrayType',
        itemDataType: {
          dataType: 'stringType',
        },
      },
      queryable: false,
      visibleByDefault: false,
      valueGetter: "( SELECT array_agg(record.value ->> 'region'::text) FILTER (WHERE (record.value ->> 'region'::text) IS NOT NULL) AS array_agg FROM jsonb_array_elements((src_users_users.jsonb -> 'personal'::text) -> 'addresses'::text) record(value))",
      filterValueGetter: "( SELECT array_agg(lower(record.value ->> 'region'::text)) FILTER (WHERE (record.value ->> 'region'::text) IS NOT NULL) AS array_agg FROM jsonb_array_elements((src_users_users.jsonb -> 'personal'::text) -> 'addresses'::text) record(value))",
      valueFunction: 'lower(:value)',
    },
    {
      name: 'user_updated_date',
      dataType: {
        dataType: 'dateType',
      },
      queryable: true,
      visibleByDefault: false,
      valueGetter: "src_users_users.jsonb -> 'metadata' ->> 'updatedDate'",
    },
    {
      name: 'username',
      dataType: {
        dataType: 'stringType',
      },
      queryable: true,
      visibleByDefault: true,
      valueGetter: "src_users_users.jsonb ->> 'username'",
      filterValueGetter: "lower(${tenant_id}_mod_users.f_unaccent(src_users_users.jsonb ->> 'username'::text))",
      valueFunction: 'lower(${tenant_id}_mod_users.f_unaccent(:value))',
    },
    {
      name: 'type',
      dataType: {
        dataType: 'stringType',
      },
      queryable: true,
      visibleByDefault: true,
      valueGetter: "src_users_users.jsonb ->> 'type'"
    },
    {
      name: 'tag_list',
      dataType: {
        dataType: 'arrayType',
        itemDataType: {
          dataType: 'rangedUUIDType',
        },
      },
      queryable: false,
      visibleByDefault: false,
      valueGetter: "(\n  SELECT\n    array_agg(tnt_id.value::text) FILTER (\n      WHERE\n        (tnt_id.value::text) IS NOT NULL\n    ) AS ARRAY_AGG\n  FROM\n    jsonb_array_elements_text(src_users_users.jsonb->'tags'->'tagList'::text) tnt_id (value)\n)",
      filterValueGetter: "(\n  SELECT\n    array_agg(lower(tnt_id.value::text)) FILTER (\n      WHERE\n        (tnt_id.value::text) IS NOT NULL\n    ) AS ARRAY_AGG\n  FROM\n    jsonb_array_elements_text(src_users_users.jsonb->'tags'->'tagList'::text) tnt_id (value)\n)",
      valueFunction: 'lower(:value)',
    },
    {
      name: 'created_date',
      dataType: {
        dataType: 'stringType',
      },
      queryable: true,
      visibleByDefault: true,
      valueGetter: "src_users_users.jsonb ->> 'createdDate'"
    },
    {
      name: 'updated_date',
      dataType: {
        dataType: 'stringType',
      },
      queryable: true,
      visibleByDefault: true,
      valueGetter: "src_users_users.jsonb ->> 'updatedDate'"
    },
    {
      name: 'meta',
      dataType: {
        dataType: 'objectType',
      },
      queryable: false,
      visibleByDefault: false,
      valueGetter: "( SELECT array_agg(acq_id.value::text) FILTER (WHERE (acq_id.value::text) IS NOT NULL) AS array_agg FROM jsonb_array_elements_text(src_users_users.jsonb -> 'meta'::text) acq_id(value))",
      filterValueGetter: "( SELECT array_agg(lower(acq_id.value::text)) FILTER (WHERE (acq_id.value::text) IS NOT NULL) AS array_agg FROM jsonb_array_elements_text(src_users_users.jsonb -> 'meta'::text) acq_id(value))",
      valueFunction: 'lower(:value)'
    },
    {
      name: 'proxy_for',
      dataType: {
        dataType: 'arrayType',
        itemDataType: {
          dataType: 'stringType',
        },
      },
      queryable: true,
      visibleByDefault: false,
      valueGetter: "(\n  SELECT\n    array_agg(pf.value::text) FILTER (\n      WHERE\n        (pf.value::text) IS NOT NULL\n    ) AS ARRAY_AGG\n  FROM\n    jsonb_array_elements_text(src_users_users.jsonb->'proxyFor'::text) pf (value)\n)",
      filterValueGetter: "(\n  SELECT\n    array_agg(lower(pf.value::text)) FILTER (\n      WHERE\n        (pf.value::text) IS NOT NULL\n    ) AS ARRAY_AGG\n  FROM\n    jsonb_array_elements_text(src_users_users.jsonb->'proxyFor'::text) pf (value)\n)",
      valueFunction: 'lower(:value)',
    }
  ],
  defaultSort: [
    {
      columnName: 'id',
      direction: 'ASC',
    },
  ],
}
