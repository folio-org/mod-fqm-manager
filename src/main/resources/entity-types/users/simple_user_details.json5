{
  id: 'bb058933-cd06-4539-bd3a-6f248ff98ee2',
  name: 'simple_user_details',
  root: false,
  private: true,
  sources: [
    {
      type: 'db',
      target: 'src_users_users',
      alias: 'user',
    },
  ],
  requiredPermissions: [
    'users.collection.get',
    'users.item.get',
  ],
  columns: [
    {
      name: 'id',
      sourceAlias: 'user',
      dataType: {
        dataType: 'rangedUUIDType',
      },
      isIdColumn: true,
      queryable: true,
      visibleByDefault: true,
      valueGetter: ':sourceAlias.id',
    },
    {
      name: 'active',
      sourceAlias: 'user',
      dataType: {
        dataType: 'booleanType',
      },
      isIdColumn: false,
      queryable: true,
      visibleByDefault: false,
      valueGetter: ":sourceAlias.jsonb->>'active'",
      filterValueGetter: "lower(${tenant_id}_mod_users.f_unaccent(:sourceAlias.jsonb ->> 'active'::text))",
      valueFunction: 'lower(${tenant_id}_mod_users.f_unaccent(:value))',

      values: [
        {
          value: 'true',
          label: 'True',
        },
        {
          value: 'false',
          label: 'False',
        },
      ],
    },
    {
      name: 'user_created_date',
      sourceAlias: 'user',
      dataType: {
        dataType: 'dateType',
      },
      isIdColumn: false,
      queryable: true,
      visibleByDefault: false,
      valueGetter: ":sourceAlias.jsonb->'metadata'->>'createdDate'",
    },
    {
      name: 'user_updated_date',
      sourceAlias: 'user',
      dataType: {
        dataType: 'dateType',
      },
      isIdColumn: false,
      queryable: true,
      visibleByDefault: false,
      valueGetter: ":sourceAlias.jsonb->'metadata'->>'updatedDate'",
    },
    {
      name: 'updated_by_user_id',
      sourceAlias: 'user',
      dataType: {
        dataType: 'stringType',
      },
      isIdColumn: false,
      queryable: true,
      visibleByDefault: false,
      valueGetter: ":sourceAlias.jsonb->'metadata'->>'updatedByUserId'",
    },
    {
      name: 'created_by_user_id',
      sourceAlias: 'user',
      dataType: {
        dataType: 'stringType',
      },
      isIdColumn: false,
      queryable: true,
      visibleByDefault: false,
      valueGetter: ":sourceAlias.jsonb->'metadata'->>'createdByUserId'",
    },
    {
      name: 'email',
      sourceAlias: 'user',
      dataType: {
        dataType: 'stringType',
      },
      isIdColumn: false,
      queryable: true,
      visibleByDefault: false,
      valueGetter: ":sourceAlias.jsonb->'personal'->>'email'",
      filterValueGetter: "lower(${tenant_id}_mod_users.f_unaccent((:sourceAlias.jsonb -> 'personal'::text) ->> 'email'::text))",
      valueFunction: 'lower(${tenant_id}_mod_users.f_unaccent(:value))'
    },
    {
      name: 'last_name',
      sourceAlias: 'user',
      dataType: {
        dataType: 'stringType',
      },
      isIdColumn: false,
      queryable: true,
      visibleByDefault: false,
      valueGetter: ":sourceAlias.jsonb->'personal'->>'lastName'",
      filterValueGetter: "\"left\"(lower(${tenant_id}_mod_users.f_unaccent((:sourceAlias.jsonb -> 'personal'::text) ->> 'lastName'::text)), 600)",
      valueFunction: '"left"(lower(${tenant_id}_mod_users.f_unaccent(:value)), 600)'
    },
    {
      name: 'first_name',
      sourceAlias: 'user',
      dataType: {
        dataType: 'stringType',
      },
      isIdColumn: false,
      queryable: true,
      visibleByDefault: false,
      valueGetter: ":sourceAlias.jsonb->'personal'->>'firstName'",
      filterValueGetter: "\"left\"(lower(${tenant_id}_mod_users.f_unaccent((:sourceAlias.jsonb -> 'personal'::text) ->> 'firstName'::text)), 600)",
      valueFunction: '"left"(lower(${tenant_id}_mod_users.f_unaccent(:value)), 600)'
    },
    {
      name: 'last_name_first_name',
      sourceAlias: 'user',
      dataType: {
        dataType: 'stringType',
      },
      isIdColumn: false,
      queryable: true,
      visibleByDefault: false,
      valueGetter: "concat_ws(', '::text, NULLIF((:sourceAlias.jsonb -> 'personal'::text) ->> 'lastName', ''::text), NULLIF((:sourceAlias.jsonb -> 'personal'::text) ->> 'firstName', ''::text))",
    },
    {
      name: 'preferred_contact_type',
      sourceAlias: 'user',
      dataType: {
        dataType: 'stringType',
      },
      isIdColumn: false,
      queryable: true,
      visibleByDefault: false,
      valueGetter: "CASE (:sourceAlias.jsonb -> 'personal'::text) ->> 'preferredContactTypeId'::text WHEN '001'::text THEN 'Mail (Primary Address)'::text WHEN '002'::text THEN 'Email'::text WHEN '003'::text THEN 'Text Message'::text ELSE 'unknown'::text END",
      values: [
        {
          value: 'Email',
          label: 'Email',
        },
        {
          value: 'Mail (Primary Address)',
          label: 'Mail (Primary Address)',
        },
        {
          value: 'Text Message',
          label: 'Text Message',
        },
        {
          value: 'unknown',
          label: 'Unknown',
        },
      ],
    },
    {
      name: 'phone',
      sourceAlias: 'user',
      dataType: {
        dataType: 'stringType',
      },
      isIdColumn: false,
      queryable: true,
      visibleByDefault: false,
      valueGetter: ":sourceAlias.jsonb->'personal'->>'phone'",
    },
    {
      name: 'addresses',
      sourceAlias: 'user',
      dataType: {
        dataType: 'arrayType',
        itemDataType: {
          dataType: 'objectType',
          properties: [
            {
              name: 'address_id',
              property: 'id',
              dataType: {
                dataType: 'rangedUUIDType',
              },
              queryable: false,
              valueGetter: "( SELECT array_agg(elems.value->>'id') FROM jsonb_array_elements(:sourceAlias.jsonb->'personal'->'addresses') AS elems)",
              filterValueGetter: "( SELECT array_agg(lower(elems.value->>'id')) FROM jsonb_array_elements(:sourceAlias.jsonb->'personal'->'addresses') AS elems)",
              valueFunction: 'lower(:value)',
            },
            {
              name: 'city',
              property: 'city',
              dataType: {
                dataType: 'stringType',
              },
              queryable: false,
              valueGetter: "( SELECT array_agg(elems.value->>'city') FROM jsonb_array_elements(:sourceAlias.jsonb->'personal'->'addresses') AS elems)",
              filterValueGetter: "( SELECT array_agg(lower(elems.value->>'city')) FROM jsonb_array_elements(:sourceAlias.jsonb->'personal'->'addresses') AS elems)",
              valueFunction: 'lower(:value)',
            },
            {
              name: 'region',
              property: 'region',
              dataType: {
                dataType: 'stringType',
              },
              queryable: false,
              valueGetter: "( SELECT array_agg(elems.value->>'region') FROM jsonb_array_elements(:sourceAlias.jsonb->'personal'->'addresses') AS elems)",
              filterValueGetter: "( SELECT array_agg(lower(elems.value->>'region')) FROM jsonb_array_elements(:sourceAlias.jsonb->'personal'->'addresses') AS elems)",
              valueFunction: 'lower(:value)',
            },
            {
              name: 'country_id',
              property: 'countryId',
              dataType: {
                dataType: 'stringType',
              },
              queryable: false,
              valueGetter: "( SELECT array_agg(elems.value->>'countryId') FROM jsonb_array_elements(:sourceAlias.jsonb->'personal'->'addresses') AS elems)",
              filterValueGetter: "( SELECT array_agg(lower(elems.value->>'countryId')) FROM jsonb_array_elements(:sourceAlias.jsonb->'personal'->'addresses') AS elems)",
              valueFunction: 'lower(:value)',
            },
            {
              name: 'postal_code',
              property: 'postalCode',
              dataType: {
                dataType: 'stringType',
              },
              queryable: false,
              valueGetter: "( SELECT array_agg(elems.value->>'postalCode') FROM jsonb_array_elements(:sourceAlias.jsonb->'personal'->'addresses') AS elems)",
              filterValueGetter: "( SELECT array_agg(lower(elems.value->>'postalCode')) FROM jsonb_array_elements(:sourceAlias.jsonb->'personal'->'addresses') AS elems)",
              valueFunction: 'lower(:value)',
            },
            {
              name: 'address_line1',
              property: 'addressLine1',
              dataType: {
                dataType: 'stringType',
              },
              queryable: false,
              valueGetter: "( SELECT array_agg(elems.value->>'addressLine1') FROM jsonb_array_elements(:sourceAlias.jsonb->'personal'->'addresses') AS elems)",
              filterValueGetter: "( SELECT array_agg(lower(elems.value->>'addressLine1')) FROM jsonb_array_elements(:sourceAlias.jsonb->'personal'->'addresses') AS elems)",
              valueFunction: 'lower(:value)',
            },
            {
              name: 'address_type_id',
              property: 'addressTypeId',
              dataType: {
                dataType: 'stringType',
              },
              queryable: false,
              valueGetter: "( SELECT array_agg(elems.value->>'addressTypeId') FROM jsonb_array_elements(:sourceAlias.jsonb->'personal'->'addresses') AS elems)",
              filterValueGetter: "( SELECT array_agg(lower(elems.value->>'addressTypeId')) FROM jsonb_array_elements(:sourceAlias.jsonb->'personal'->'addresses') AS elems)",
              valueFunction: 'lower(:value)',
            },
            {
              name: 'primary_address',
              property: 'primaryAddress',
              dataType: {
                dataType: 'booleanType',
              },
              queryable: false,
              values: [
                {
                  value: 'true',
                  label: 'True',
                },
                {
                  value: 'false',
                  label: 'False',
                },
              ],
              valueGetter: "( SELECT array_agg(elems.value->>'primaryAddress') FROM jsonb_array_elements(:sourceAlias.jsonb->'personal'->'addresses') AS elems)",
              filterValueGetter: "( SELECT array_agg(lower(elems.value->>'primaryAddress')) FROM jsonb_array_elements(:sourceAlias.jsonb->'personal'->'addresses') AS elems)",
              valueFunction: 'lower(:value)',
            },
            {
              name: 'address_line2',
              property: 'addressLine2',
              dataType: {
                dataType: 'stringType',
              },
              queryable: false,
              valueGetter: "( SELECT array_agg(elems.value->>'addressLine2') FROM jsonb_array_elements(:sourceAlias.jsonb->'personal'->'addresses') AS elems)",
              filterValueGetter: "( SELECT array_agg(lower(elems.value->>'addressLine2')) FROM jsonb_array_elements(:sourceAlias.jsonb->'personal'->'addresses') AS elems)",
              valueFunction: 'lower(:value)',
            },
          ],
        },
      },
      isIdColumn: false,
      queryable: false,
      visibleByDefault: false,
      valueGetter: ":sourceAlias.jsonb->'personal'->>'addresses'",
    },
    {
      name: 'middle_name',
      sourceAlias: 'user',
      dataType: {
        dataType: 'stringType',
      },
      isIdColumn: false,
      queryable: true,
      visibleByDefault: false,
      valueGetter: ":sourceAlias.jsonb->'personal'->>'middleName'",
    },
    {
      name: 'date_of_birth',
      sourceAlias: 'user',
      dataType: {
        dataType: 'dateType',
      },
      isIdColumn: false,
      queryable: true,
      visibleByDefault: false,
      valueGetter: ":sourceAlias.jsonb->'personal'->>'dateOfBirth'",
    },
    {
      name: 'mobile_phone',
      sourceAlias: 'user',
      dataType: {
        dataType: 'stringType',
      },
      isIdColumn: false,
      queryable: true,
      visibleByDefault: false,
      valueGetter: ":sourceAlias.jsonb->'personal'->>'mobilePhone'",
    },
    {
      name: 'preferred_first_name',
      sourceAlias: 'user',
      dataType: {
        dataType: 'stringType',
      },
      isIdColumn: false,
      queryable: true,
      visibleByDefault: false,
      valueGetter: ":sourceAlias.jsonb->'personal'->>'preferredFirstName'",
      filterValueGetter: "${tenant_id}_mod_users.f_unaccent((:sourceAlias.jsonb -> 'personal'::text) ->> 'preferredFirstName'::text)",
      valueFunction: '${tenant_id}_mod_users.f_unaccent(:value)'
    },
    {
      name: 'username',
      sourceAlias: 'user',
      dataType: {
        dataType: 'stringType',
      },
      isIdColumn: false,
      queryable: true,
      visibleByDefault: false,
      valueGetter: ":sourceAlias.jsonb->>'username'",
      filterValueGetter: "lower(${tenant_id}_mod_users.f_unaccent(:sourceAlias.jsonb ->> 'username'::text))",
      valueFunction: 'lower(${tenant_id}_mod_users.f_unaccent(:value))'
    },
    {
      name: 'created_date',
      sourceAlias: 'user',
      dataType: {
        dataType: 'dateType',
      },
      isIdColumn: false,
      queryable: true,
      visibleByDefault: false,
      valueGetter: ":sourceAlias.jsonb->>'createdDate'",
    },
    {
      name: 'patron_group',
      sourceAlias: 'user',
      dataType: {
        dataType: 'rangedUUIDType',
      },
      isIdColumn: false,
      queryable: true,
      visibleByDefault: false,
      valueGetter: ":sourceAlias.jsonb->>'patronGroup'",
    },
    {
      name: 'updated_date',
      sourceAlias: 'user',
      dataType: {
        dataType: 'dateType',
      },
      isIdColumn: false,
      queryable: true,
      visibleByDefault: false,
      valueGetter: ":sourceAlias.jsonb->>'updatedDate'",
    },
    {
      name: 'expiration_date',
      sourceAlias: 'user',
      dataType: {
        dataType: 'dateType',
      },
      isIdColumn: false,
      queryable: true,
      visibleByDefault: false,
      valueGetter: ":sourceAlias.jsonb->>'expirationDate'",
      filterValueGetter: '"left"(:sourceAlias.jsonb ->> \'expirationDate\'::text, 600)',
      valueFunction: '"left"(:value, 600)'
    },
    {
      name: 'barcode',
      sourceAlias: 'user',
      dataType: {
        dataType: 'stringType',
      },
      isIdColumn: false,
      queryable: true,
      visibleByDefault: false,
      valueGetter: ":sourceAlias.jsonb->>'barcode'",
      filterValueGetter: "lower(${tenant_id}_mod_users.f_unaccent(:sourceAlias.jsonb ->> 'barcode'::text))",
      valueFunction: 'lower(${tenant_id}_mod_users.f_unaccent(:value))'
    },
    {
      name: 'external_system_id',
      sourceAlias: 'user',
      dataType: {
        dataType: 'stringType',
      },
      isIdColumn: false,
      queryable: true,
      visibleByDefault: false,
      valueGetter: ":sourceAlias.jsonb->>'externalSystemId'",
      filterValueGetter: "lower(${tenant_id}_mod_users.f_unaccent(:sourceAlias.jsonb ->> 'externalSystemId'::text))",
      valueFunction: 'lower(${tenant_id}_mod_users.f_unaccent(:value))'
    },
    {
      name: 'type',
      sourceAlias: 'user',
      dataType: {
        dataType: 'stringType',
      },
      isIdColumn: false,
      queryable: true,
      visibleByDefault: false,
      valueGetter: ":sourceAlias.jsonb->>'type'",
    },
    {
      name: 'tags_tag_list',
      sourceAlias: 'user',
      dataType: {
        dataType: 'arrayType',
        itemDataType: {
          dataType: 'stringType',
        },
      },
      isIdColumn: false,
      queryable: false,
      visibleByDefault: false,
      valueGetter: "(\
        SELECT\
          array_agg(elems.value::text)\
        FROM\
          jsonb_array_elements(:sourceAlias.jsonb->'tags'->'tagList') AS elems\
      )",
      filterValueGetter: "(\
        SELECT\
          array_agg(lower(elems.value::text))\
        FROM\
          jsonb_array_elements(:sourceAlias.jsonb->'tags'->'tagList') AS elems\
      )",
    },
    {
      name: 'proxy_for',
      sourceAlias: 'user',
      dataType: {
        dataType: 'arrayType',
        itemDataType: {
          dataType: 'stringType',
        },
      },
      isIdColumn: false,
      queryable: false,
      visibleByDefault: false,
      valueGetter: "(\
        SELECT\
          array_agg(elems.value::text)\
        FROM\
          jsonb_array_elements(:sourceAlias.jsonb->'proxyFor') AS elems\
      )",
      filterValueGetter: "(\
        SELECT\
          array_agg(lower(elems.value::text))\
        FROM\
          jsonb_array_elements(:sourceAlias.jsonb->'proxyFor') AS elems\
      )",
    },
    {
      name: 'department_ids',
      sourceAlias: 'user',
      dataType: {
        dataType: 'arrayType',
        itemDataType: {
          dataType: 'stringType',
        },
      },
      isIdColumn: false,
      queryable: true,
      visibleByDefault: false,
      valueGetter: "(\
        SELECT\
          array_agg(elems.value::text)\
        FROM\
          jsonb_array_elements_text(:sourceAlias.jsonb->'departments') AS elems\
      )",
      filterValueGetter: "(\
        SELECT\
          array_agg(lower(elems.value::text))\
        FROM\
          jsonb_array_elements_text(:sourceAlias.jsonb->'departments') AS elems\
      )",
    },
    {
      name: "departments",
      source: {
        columnName: "departments",
        entityTypeId: "bb058933-cd06-4539-bd3a-6f248ff98ee2"
      },
      dataType: {
        dataType: "arrayType",
        itemDataType: {
          dataType: "stringType"
        }
      },
      sourceAlias: "user",
      queryable: true,
      idColumnName: "department_ids",
      valueSourceApi: {
        path: "departments",
        labelJsonPath: "$.departments.*.name",
        valueJsonPath: "$.departments.*.id"
      },
      visibleByDefault: false,
      valueFunction: "lower(:value)",
      valueGetter: "( SELECT array_agg(a.jsonb ->> 'name'::text) FILTER (WHERE (a.jsonb ->> 'name'::text) IS NOT NULL) AS array_agg FROM jsonb_array_elements_text((:sourceAlias.jsonb -> 'departments'::text)) record(value) JOIN src_users_departments a ON (record.value::text) = a.id::text)",
      filterValueGetter: "( SELECT array_agg(lower(a.jsonb ->> 'name'::text)) FILTER (WHERE (a.jsonb ->> 'name'::text) IS NOT NULL) AS array_agg FROM jsonb_array_elements_text((:sourceAlias.jsonb -> 'departments'::text)) record(value) JOIN src_users_departments a ON (record.value::text) = a.id::text)"
    },
    {
      name: 'enrollment_date',
      sourceAlias: 'user',
      dataType: {
        dataType: 'dateType',
      },
      isIdColumn: false,
      queryable: true,
      visibleByDefault: false,
      valueGetter: ":sourceAlias.jsonb->>'enrollmentDate'",
    },
    {
      name: 'jsonb',
      sourceAlias: 'user',
      dataType: {
        dataType: 'stringType',
      },
      isIdColumn: false,
      queryable: false,
      visibleByDefault: false,
      valueGetter: ":sourceAlias.jsonb::text",
    }
  ],
  defaultSort: [
    {
      columnName: 'id',
      direction: 'ASC',
    },
  ],
}
